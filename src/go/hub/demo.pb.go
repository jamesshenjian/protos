// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.29.1
// 	protoc        v4.22.2
// source: hub/demo.proto

package hub

import (
	goshare "github.com/jamesshenjian/protos/src/go/goshare"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 模拟环境的订单记录
type DemoOrder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaId                 string                  `protobuf:"bytes,1,opt,name=ta_id,json=taId,proto3" json:"ta_id,omitempty"`
	BuId                 string                  `protobuf:"bytes,2,opt,name=bu_id,json=buId,proto3" json:"bu_id,omitempty"`
	FrontId              int32                   `protobuf:"varint,3,opt,name=front_id,json=frontId,proto3" json:"front_id,omitempty"`
	SessionId            int32                   `protobuf:"varint,4,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	OrderRef             string                  `protobuf:"bytes,5,opt,name=order_ref,json=orderRef,proto3" json:"order_ref,omitempty"`
	Exchange             string                  `protobuf:"bytes,6,opt,name=exchange,proto3" json:"exchange,omitempty"`
	Symbol               string                  `protobuf:"bytes,7,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Product              string                  `protobuf:"bytes,8,opt,name=product,proto3" json:"product,omitempty"`
	Direction            int32                   `protobuf:"varint,9,opt,name=direction,proto3" json:"direction,omitempty"`
	Offset               int32                   `protobuf:"varint,10,opt,name=offset,proto3" json:"offset,omitempty"`
	Price                float64                 `protobuf:"fixed64,11,opt,name=price,proto3" json:"price,omitempty"`
	Volume               int32                   `protobuf:"varint,12,opt,name=volume,proto3" json:"volume,omitempty"`
	PriceTick            float64                 `protobuf:"fixed64,13,opt,name=price_tick,json=priceTick,proto3" json:"price_tick,omitempty"`
	Multiple             int32                   `protobuf:"varint,14,opt,name=multiple,proto3" json:"multiple,omitempty"`
	TradingDay           int32                   `protobuf:"varint,15,opt,name=trading_day,json=tradingDay,proto3" json:"trading_day,omitempty"`
	Status               int32                   `protobuf:"varint,16,opt,name=status,proto3" json:"status,omitempty"`
	DemoOrderId          string                  `protobuf:"bytes,17,opt,name=demo_order_id,json=demoOrderId,proto3" json:"demo_order_id,omitempty"`
	UpperLimit           float64                 `protobuf:"fixed64,18,opt,name=upper_limit,json=upperLimit,proto3" json:"upper_limit,omitempty"`
	LowerLimit           float64                 `protobuf:"fixed64,19,opt,name=lower_limit,json=lowerLimit,proto3" json:"lower_limit,omitempty"`
	MinLimitOrderVolume  int32                   `protobuf:"varint,20,opt,name=min_limit_order_volume,json=minLimitOrderVolume,proto3" json:"min_limit_order_volume,omitempty"`
	MinMarketOrderVolume int32                   `protobuf:"varint,21,opt,name=min_market_order_volume,json=minMarketOrderVolume,proto3" json:"min_market_order_volume,omitempty"`
	VolumeTraded         int32                   `protobuf:"varint,22,opt,name=volume_traded,json=volumeTraded,proto3" json:"volume_traded,omitempty"`
	VolumeCanceled       int32                   `protobuf:"varint,23,opt,name=volume_canceled,json=volumeCanceled,proto3" json:"volume_canceled,omitempty"`
	SendTradingDay       int32                   `protobuf:"varint,24,opt,name=send_trading_day,json=sendTradingDay,proto3" json:"send_trading_day,omitempty"`
	ProductType          int32                   `protobuf:"varint,25,opt,name=product_type,json=productType,proto3" json:"product_type,omitempty"`
	OrderSourceType      int32                   `protobuf:"varint,26,opt,name=order_source_type,json=orderSourceType,proto3" json:"order_source_type,omitempty"`
	PriceType            int32                   `protobuf:"varint,27,opt,name=price_type,json=priceType,proto3" json:"price_type,omitempty"`
	SendTime             int64                   `protobuf:"varint,28,opt,name=send_time,json=sendTime,proto3" json:"send_time,omitempty"`
	TimeRule             []*goshare.MarketStatus `protobuf:"bytes,29,rep,name=time_rule,json=timeRule,proto3" json:"time_rule,omitempty"`
}

func (x *DemoOrder) Reset() {
	*x = DemoOrder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hub_demo_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DemoOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DemoOrder) ProtoMessage() {}

func (x *DemoOrder) ProtoReflect() protoreflect.Message {
	mi := &file_hub_demo_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DemoOrder.ProtoReflect.Descriptor instead.
func (*DemoOrder) Descriptor() ([]byte, []int) {
	return file_hub_demo_proto_rawDescGZIP(), []int{0}
}

func (x *DemoOrder) GetTaId() string {
	if x != nil {
		return x.TaId
	}
	return ""
}

func (x *DemoOrder) GetBuId() string {
	if x != nil {
		return x.BuId
	}
	return ""
}

func (x *DemoOrder) GetFrontId() int32 {
	if x != nil {
		return x.FrontId
	}
	return 0
}

func (x *DemoOrder) GetSessionId() int32 {
	if x != nil {
		return x.SessionId
	}
	return 0
}

func (x *DemoOrder) GetOrderRef() string {
	if x != nil {
		return x.OrderRef
	}
	return ""
}

func (x *DemoOrder) GetExchange() string {
	if x != nil {
		return x.Exchange
	}
	return ""
}

func (x *DemoOrder) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *DemoOrder) GetProduct() string {
	if x != nil {
		return x.Product
	}
	return ""
}

func (x *DemoOrder) GetDirection() int32 {
	if x != nil {
		return x.Direction
	}
	return 0
}

func (x *DemoOrder) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *DemoOrder) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *DemoOrder) GetVolume() int32 {
	if x != nil {
		return x.Volume
	}
	return 0
}

func (x *DemoOrder) GetPriceTick() float64 {
	if x != nil {
		return x.PriceTick
	}
	return 0
}

func (x *DemoOrder) GetMultiple() int32 {
	if x != nil {
		return x.Multiple
	}
	return 0
}

func (x *DemoOrder) GetTradingDay() int32 {
	if x != nil {
		return x.TradingDay
	}
	return 0
}

func (x *DemoOrder) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *DemoOrder) GetDemoOrderId() string {
	if x != nil {
		return x.DemoOrderId
	}
	return ""
}

func (x *DemoOrder) GetUpperLimit() float64 {
	if x != nil {
		return x.UpperLimit
	}
	return 0
}

func (x *DemoOrder) GetLowerLimit() float64 {
	if x != nil {
		return x.LowerLimit
	}
	return 0
}

func (x *DemoOrder) GetMinLimitOrderVolume() int32 {
	if x != nil {
		return x.MinLimitOrderVolume
	}
	return 0
}

func (x *DemoOrder) GetMinMarketOrderVolume() int32 {
	if x != nil {
		return x.MinMarketOrderVolume
	}
	return 0
}

func (x *DemoOrder) GetVolumeTraded() int32 {
	if x != nil {
		return x.VolumeTraded
	}
	return 0
}

func (x *DemoOrder) GetVolumeCanceled() int32 {
	if x != nil {
		return x.VolumeCanceled
	}
	return 0
}

func (x *DemoOrder) GetSendTradingDay() int32 {
	if x != nil {
		return x.SendTradingDay
	}
	return 0
}

func (x *DemoOrder) GetProductType() int32 {
	if x != nil {
		return x.ProductType
	}
	return 0
}

func (x *DemoOrder) GetOrderSourceType() int32 {
	if x != nil {
		return x.OrderSourceType
	}
	return 0
}

func (x *DemoOrder) GetPriceType() int32 {
	if x != nil {
		return x.PriceType
	}
	return 0
}

func (x *DemoOrder) GetSendTime() int64 {
	if x != nil {
		return x.SendTime
	}
	return 0
}

func (x *DemoOrder) GetTimeRule() []*goshare.MarketStatus {
	if x != nil {
		return x.TimeRule
	}
	return nil
}

var File_hub_demo_proto protoreflect.FileDescriptor

var file_hub_demo_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x68, 0x75, 0x62, 0x2f, 0x64, 0x65, 0x6d, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x0b, 0x67, 0x6f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x2e, 0x68, 0x75, 0x62, 0x1a, 0x18, 0x67,
	0x6f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x2f, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xbb, 0x07, 0x0a, 0x09, 0x44, 0x65, 0x6d, 0x6f,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x13, 0x0a, 0x05, 0x74, 0x61, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x49, 0x64, 0x12, 0x13, 0x0a, 0x05, 0x62, 0x75,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x62, 0x75, 0x49, 0x64, 0x12,
	0x19, 0x0a, 0x08, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09,
	0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x5f, 0x72, 0x65, 0x66, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x52, 0x65, 0x66, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x69, 0x63,
	0x65, 0x5f, 0x74, 0x69, 0x63, 0x6b, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x54, 0x69, 0x63, 0x6b, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x75, 0x6c, 0x74, 0x69,
	0x70, 0x6c, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6d, 0x75, 0x6c, 0x74, 0x69,
	0x70, 0x6c, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x64,
	0x61, 0x79, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e,
	0x67, 0x44, 0x61, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x10,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x22, 0x0a, 0x0d,
	0x64, 0x65, 0x6d, 0x6f, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x11, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x6d, 0x6f, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x70, 0x70, 0x65, 0x72, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18,
	0x12, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x75, 0x70, 0x70, 0x65, 0x72, 0x4c, 0x69, 0x6d, 0x69,
	0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x18, 0x13, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x4c, 0x69, 0x6d,
	0x69, 0x74, 0x12, 0x33, 0x0a, 0x16, 0x6d, 0x69, 0x6e, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x5f,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x14, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x13, 0x6d, 0x69, 0x6e, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12, 0x35, 0x0a, 0x17, 0x6d, 0x69, 0x6e, 0x5f, 0x6d,
	0x61, 0x72, 0x6b, 0x65, 0x74, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x76, 0x6f, 0x6c, 0x75,
	0x6d, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x05, 0x52, 0x14, 0x6d, 0x69, 0x6e, 0x4d, 0x61, 0x72,
	0x6b, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12, 0x23,
	0x0a, 0x0d, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x65, 0x64, 0x18,
	0x16, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x54, 0x72, 0x61,
	0x64, 0x65, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x5f, 0x63, 0x61,
	0x6e, 0x63, 0x65, 0x6c, 0x65, 0x64, 0x18, 0x17, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x76, 0x6f,
	0x6c, 0x75, 0x6d, 0x65, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x65, 0x64, 0x12, 0x28, 0x0a, 0x10,
	0x73, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x64, 0x61, 0x79,
	0x18, 0x18, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x73, 0x65, 0x6e, 0x64, 0x54, 0x72, 0x61, 0x64,
	0x69, 0x6e, 0x67, 0x44, 0x61, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x19, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x1a,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x73, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x32, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x72, 0x75, 0x6c, 0x65, 0x18, 0x1d,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x67, 0x6f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x2e, 0x4d,
	0x61, 0x72, 0x6b, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x08, 0x74, 0x69, 0x6d,
	0x65, 0x52, 0x75, 0x6c, 0x65, 0x42, 0x2c, 0x5a, 0x2a, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x6a, 0x61, 0x6d, 0x65, 0x73, 0x73, 0x68, 0x65, 0x6e, 0x6a, 0x69, 0x61,
	0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x73, 0x72, 0x63, 0x2f, 0x67, 0x6f, 0x2f,
	0x68, 0x75, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_hub_demo_proto_rawDescOnce sync.Once
	file_hub_demo_proto_rawDescData = file_hub_demo_proto_rawDesc
)

func file_hub_demo_proto_rawDescGZIP() []byte {
	file_hub_demo_proto_rawDescOnce.Do(func() {
		file_hub_demo_proto_rawDescData = protoimpl.X.CompressGZIP(file_hub_demo_proto_rawDescData)
	})
	return file_hub_demo_proto_rawDescData
}

var file_hub_demo_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_hub_demo_proto_goTypes = []interface{}{
	(*DemoOrder)(nil),            // 0: goshare.hub.DemoOrder
	(*goshare.MarketStatus)(nil), // 1: goshare.MarketStatus
}
var file_hub_demo_proto_depIdxs = []int32{
	1, // 0: goshare.hub.DemoOrder.time_rule:type_name -> goshare.MarketStatus
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_hub_demo_proto_init() }
func file_hub_demo_proto_init() {
	if File_hub_demo_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_hub_demo_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DemoOrder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_hub_demo_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_hub_demo_proto_goTypes,
		DependencyIndexes: file_hub_demo_proto_depIdxs,
		MessageInfos:      file_hub_demo_proto_msgTypes,
	}.Build()
	File_hub_demo_proto = out.File
	file_hub_demo_proto_rawDesc = nil
	file_hub_demo_proto_goTypes = nil
	file_hub_demo_proto_depIdxs = nil
}
