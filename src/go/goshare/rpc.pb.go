// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.29.1
// 	protoc        v4.22.2
// source: goshare/rpc.proto

package goshare

import (
	spider "github.com/jamesshenjian/protos/src/go/spider"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 批量获取
type ReqGetInstrumentList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Exchange string `protobuf:"bytes,1,opt,name=exchange,proto3" json:"exchange,omitempty"`
}

func (x *ReqGetInstrumentList) Reset() {
	*x = ReqGetInstrumentList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goshare_rpc_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqGetInstrumentList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqGetInstrumentList) ProtoMessage() {}

func (x *ReqGetInstrumentList) ProtoReflect() protoreflect.Message {
	mi := &file_goshare_rpc_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqGetInstrumentList.ProtoReflect.Descriptor instead.
func (*ReqGetInstrumentList) Descriptor() ([]byte, []int) {
	return file_goshare_rpc_proto_rawDescGZIP(), []int{0}
}

func (x *ReqGetInstrumentList) GetExchange() string {
	if x != nil {
		return x.Exchange
	}
	return ""
}

type RspGetInstrumentList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*Instrument `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *RspGetInstrumentList) Reset() {
	*x = RspGetInstrumentList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goshare_rpc_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RspGetInstrumentList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RspGetInstrumentList) ProtoMessage() {}

func (x *RspGetInstrumentList) ProtoReflect() protoreflect.Message {
	mi := &file_goshare_rpc_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RspGetInstrumentList.ProtoReflect.Descriptor instead.
func (*RspGetInstrumentList) Descriptor() ([]byte, []int) {
	return file_goshare_rpc_proto_rawDescGZIP(), []int{1}
}

func (x *RspGetInstrumentList) GetList() []*Instrument {
	if x != nil {
		return x.List
	}
	return nil
}

// 保存合约
type ReqSaveInstrument struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Instrument *Instrument `protobuf:"bytes,1,opt,name=instrument,proto3" json:"instrument,omitempty"`
}

func (x *ReqSaveInstrument) Reset() {
	*x = ReqSaveInstrument{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goshare_rpc_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqSaveInstrument) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqSaveInstrument) ProtoMessage() {}

func (x *ReqSaveInstrument) ProtoReflect() protoreflect.Message {
	mi := &file_goshare_rpc_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqSaveInstrument.ProtoReflect.Descriptor instead.
func (*ReqSaveInstrument) Descriptor() ([]byte, []int) {
	return file_goshare_rpc_proto_rawDescGZIP(), []int{2}
}

func (x *ReqSaveInstrument) GetInstrument() *Instrument {
	if x != nil {
		return x.Instrument
	}
	return nil
}

type RspSaveInstrument struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RspSaveInstrument) Reset() {
	*x = RspSaveInstrument{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goshare_rpc_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RspSaveInstrument) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RspSaveInstrument) ProtoMessage() {}

func (x *RspSaveInstrument) ProtoReflect() protoreflect.Message {
	mi := &file_goshare_rpc_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RspSaveInstrument.ProtoReflect.Descriptor instead.
func (*RspSaveInstrument) Descriptor() ([]byte, []int) {
	return file_goshare_rpc_proto_rawDescGZIP(), []int{3}
}

// 读取合约
type ReqGetInstrument struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Exchange string `protobuf:"bytes,1,opt,name=exchange,proto3" json:"exchange,omitempty"`
	Symbol   string `protobuf:"bytes,2,opt,name=symbol,proto3" json:"symbol,omitempty"`
}

func (x *ReqGetInstrument) Reset() {
	*x = ReqGetInstrument{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goshare_rpc_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqGetInstrument) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqGetInstrument) ProtoMessage() {}

func (x *ReqGetInstrument) ProtoReflect() protoreflect.Message {
	mi := &file_goshare_rpc_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqGetInstrument.ProtoReflect.Descriptor instead.
func (*ReqGetInstrument) Descriptor() ([]byte, []int) {
	return file_goshare_rpc_proto_rawDescGZIP(), []int{4}
}

func (x *ReqGetInstrument) GetExchange() string {
	if x != nil {
		return x.Exchange
	}
	return ""
}

func (x *ReqGetInstrument) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

type RspGetInstrument struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Instrument *Instrument `protobuf:"bytes,1,opt,name=instrument,proto3" json:"instrument,omitempty"`
}

func (x *RspGetInstrument) Reset() {
	*x = RspGetInstrument{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goshare_rpc_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RspGetInstrument) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RspGetInstrument) ProtoMessage() {}

func (x *RspGetInstrument) ProtoReflect() protoreflect.Message {
	mi := &file_goshare_rpc_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RspGetInstrument.ProtoReflect.Descriptor instead.
func (*RspGetInstrument) Descriptor() ([]byte, []int) {
	return file_goshare_rpc_proto_rawDescGZIP(), []int{5}
}

func (x *RspGetInstrument) GetInstrument() *Instrument {
	if x != nil {
		return x.Instrument
	}
	return nil
}

type ReqSubscribe struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Exchange   string   `protobuf:"bytes,1,opt,name=exchange,proto3" json:"exchange,omitempty"`
	Symbol     string   `protobuf:"bytes,2,opt,name=symbol,proto3" json:"symbol,omitempty"`
	List       []string `protobuf:"bytes,3,rep,name=list,proto3" json:"list,omitempty"`
	BinaryData bool     `protobuf:"varint,4,opt,name=binary_data,json=binaryData,proto3" json:"binary_data,omitempty"`
}

func (x *ReqSubscribe) Reset() {
	*x = ReqSubscribe{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goshare_rpc_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqSubscribe) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqSubscribe) ProtoMessage() {}

func (x *ReqSubscribe) ProtoReflect() protoreflect.Message {
	mi := &file_goshare_rpc_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqSubscribe.ProtoReflect.Descriptor instead.
func (*ReqSubscribe) Descriptor() ([]byte, []int) {
	return file_goshare_rpc_proto_rawDescGZIP(), []int{6}
}

func (x *ReqSubscribe) GetExchange() string {
	if x != nil {
		return x.Exchange
	}
	return ""
}

func (x *ReqSubscribe) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *ReqSubscribe) GetList() []string {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *ReqSubscribe) GetBinaryData() bool {
	if x != nil {
		return x.BinaryData
	}
	return false
}

type RspSubscribe struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RspSubscribe) Reset() {
	*x = RspSubscribe{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goshare_rpc_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RspSubscribe) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RspSubscribe) ProtoMessage() {}

func (x *RspSubscribe) ProtoReflect() protoreflect.Message {
	mi := &file_goshare_rpc_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RspSubscribe.ProtoReflect.Descriptor instead.
func (*RspSubscribe) Descriptor() ([]byte, []int) {
	return file_goshare_rpc_proto_rawDescGZIP(), []int{7}
}

type ReqUnSubscribe struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Exchange string   `protobuf:"bytes,1,opt,name=exchange,proto3" json:"exchange,omitempty"`
	List     []string `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *ReqUnSubscribe) Reset() {
	*x = ReqUnSubscribe{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goshare_rpc_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqUnSubscribe) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqUnSubscribe) ProtoMessage() {}

func (x *ReqUnSubscribe) ProtoReflect() protoreflect.Message {
	mi := &file_goshare_rpc_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqUnSubscribe.ProtoReflect.Descriptor instead.
func (*ReqUnSubscribe) Descriptor() ([]byte, []int) {
	return file_goshare_rpc_proto_rawDescGZIP(), []int{8}
}

func (x *ReqUnSubscribe) GetExchange() string {
	if x != nil {
		return x.Exchange
	}
	return ""
}

func (x *ReqUnSubscribe) GetList() []string {
	if x != nil {
		return x.List
	}
	return nil
}

type RspUnSubscribe struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RspUnSubscribe) Reset() {
	*x = RspUnSubscribe{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goshare_rpc_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RspUnSubscribe) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RspUnSubscribe) ProtoMessage() {}

func (x *RspUnSubscribe) ProtoReflect() protoreflect.Message {
	mi := &file_goshare_rpc_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RspUnSubscribe.ProtoReflect.Descriptor instead.
func (*RspUnSubscribe) Descriptor() ([]byte, []int) {
	return file_goshare_rpc_proto_rawDescGZIP(), []int{9}
}

type ReqCombineSubscribe struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Exchange   string       `protobuf:"bytes,1,opt,name=exchange,proto3" json:"exchange,omitempty"`
	Symbol     string       `protobuf:"bytes,2,opt,name=symbol,proto3" json:"symbol,omitempty"`
	PeriodList []PeriodType `protobuf:"varint,3,rep,packed,name=period_list,json=periodList,proto3,enum=goshare.PeriodType" json:"period_list,omitempty"`
}

func (x *ReqCombineSubscribe) Reset() {
	*x = ReqCombineSubscribe{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goshare_rpc_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqCombineSubscribe) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqCombineSubscribe) ProtoMessage() {}

func (x *ReqCombineSubscribe) ProtoReflect() protoreflect.Message {
	mi := &file_goshare_rpc_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqCombineSubscribe.ProtoReflect.Descriptor instead.
func (*ReqCombineSubscribe) Descriptor() ([]byte, []int) {
	return file_goshare_rpc_proto_rawDescGZIP(), []int{10}
}

func (x *ReqCombineSubscribe) GetExchange() string {
	if x != nil {
		return x.Exchange
	}
	return ""
}

func (x *ReqCombineSubscribe) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *ReqCombineSubscribe) GetPeriodList() []PeriodType {
	if x != nil {
		return x.PeriodList
	}
	return nil
}

type RspCombineSubscribe struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Exchange string              `protobuf:"bytes,1,opt,name=exchange,proto3" json:"exchange,omitempty"` // 交易所
	Symbol   string              `protobuf:"bytes,2,opt,name=symbol,proto3" json:"symbol,omitempty"`     // 合约
	History  []*KlineSeries      `protobuf:"bytes,3,rep,name=history,proto3" json:"history,omitempty"`   // 历史
	Tick     *MarketDataSnapshot `protobuf:"bytes,4,opt,name=tick,proto3" json:"tick,omitempty"`         // 行情
	Klines   []*Kline            `protobuf:"bytes,5,rep,name=klines,proto3" json:"klines,omitempty"`
}

func (x *RspCombineSubscribe) Reset() {
	*x = RspCombineSubscribe{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goshare_rpc_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RspCombineSubscribe) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RspCombineSubscribe) ProtoMessage() {}

func (x *RspCombineSubscribe) ProtoReflect() protoreflect.Message {
	mi := &file_goshare_rpc_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RspCombineSubscribe.ProtoReflect.Descriptor instead.
func (*RspCombineSubscribe) Descriptor() ([]byte, []int) {
	return file_goshare_rpc_proto_rawDescGZIP(), []int{11}
}

func (x *RspCombineSubscribe) GetExchange() string {
	if x != nil {
		return x.Exchange
	}
	return ""
}

func (x *RspCombineSubscribe) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *RspCombineSubscribe) GetHistory() []*KlineSeries {
	if x != nil {
		return x.History
	}
	return nil
}

func (x *RspCombineSubscribe) GetTick() *MarketDataSnapshot {
	if x != nil {
		return x.Tick
	}
	return nil
}

func (x *RspCombineSubscribe) GetKlines() []*Kline {
	if x != nil {
		return x.Klines
	}
	return nil
}

type ReqGetTickSeries struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Exchange string `protobuf:"bytes,1,opt,name=exchange,proto3" json:"exchange,omitempty"`
	Symbol   string `protobuf:"bytes,2,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Start    int32  `protobuf:"varint,3,opt,name=start,proto3" json:"start,omitempty"`
	End      int32  `protobuf:"varint,4,opt,name=end,proto3" json:"end,omitempty"`
}

func (x *ReqGetTickSeries) Reset() {
	*x = ReqGetTickSeries{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goshare_rpc_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqGetTickSeries) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqGetTickSeries) ProtoMessage() {}

func (x *ReqGetTickSeries) ProtoReflect() protoreflect.Message {
	mi := &file_goshare_rpc_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqGetTickSeries.ProtoReflect.Descriptor instead.
func (*ReqGetTickSeries) Descriptor() ([]byte, []int) {
	return file_goshare_rpc_proto_rawDescGZIP(), []int{12}
}

func (x *ReqGetTickSeries) GetExchange() string {
	if x != nil {
		return x.Exchange
	}
	return ""
}

func (x *ReqGetTickSeries) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *ReqGetTickSeries) GetStart() int32 {
	if x != nil {
		return x.Start
	}
	return 0
}

func (x *ReqGetTickSeries) GetEnd() int32 {
	if x != nil {
		return x.End
	}
	return 0
}

type RspGetTickSeries struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Exchange string                `protobuf:"bytes,1,opt,name=exchange,proto3" json:"exchange,omitempty"`
	Symbol   string                `protobuf:"bytes,2,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Start    int32                 `protobuf:"varint,3,opt,name=start,proto3" json:"start,omitempty"`
	End      int32                 `protobuf:"varint,4,opt,name=end,proto3" json:"end,omitempty"`
	List     []*MarketDataSnapshot `protobuf:"bytes,5,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *RspGetTickSeries) Reset() {
	*x = RspGetTickSeries{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goshare_rpc_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RspGetTickSeries) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RspGetTickSeries) ProtoMessage() {}

func (x *RspGetTickSeries) ProtoReflect() protoreflect.Message {
	mi := &file_goshare_rpc_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RspGetTickSeries.ProtoReflect.Descriptor instead.
func (*RspGetTickSeries) Descriptor() ([]byte, []int) {
	return file_goshare_rpc_proto_rawDescGZIP(), []int{13}
}

func (x *RspGetTickSeries) GetExchange() string {
	if x != nil {
		return x.Exchange
	}
	return ""
}

func (x *RspGetTickSeries) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *RspGetTickSeries) GetStart() int32 {
	if x != nil {
		return x.Start
	}
	return 0
}

func (x *RspGetTickSeries) GetEnd() int32 {
	if x != nil {
		return x.End
	}
	return 0
}

func (x *RspGetTickSeries) GetList() []*MarketDataSnapshot {
	if x != nil {
		return x.List
	}
	return nil
}

type ReqSaveKlineSeries struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Exchange string          `protobuf:"bytes,1,opt,name=exchange,proto3" json:"exchange,omitempty"`
	Symbol   string          `protobuf:"bytes,2,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Period   PeriodType      `protobuf:"varint,3,opt,name=period,proto3,enum=goshare.PeriodType" json:"period,omitempty"`
	Adjust   PriceAdjustType `protobuf:"varint,4,opt,name=adjust,proto3,enum=goshare.PriceAdjustType" json:"adjust,omitempty"`
	List     []*Kline        `protobuf:"bytes,5,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *ReqSaveKlineSeries) Reset() {
	*x = ReqSaveKlineSeries{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goshare_rpc_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqSaveKlineSeries) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqSaveKlineSeries) ProtoMessage() {}

func (x *ReqSaveKlineSeries) ProtoReflect() protoreflect.Message {
	mi := &file_goshare_rpc_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqSaveKlineSeries.ProtoReflect.Descriptor instead.
func (*ReqSaveKlineSeries) Descriptor() ([]byte, []int) {
	return file_goshare_rpc_proto_rawDescGZIP(), []int{14}
}

func (x *ReqSaveKlineSeries) GetExchange() string {
	if x != nil {
		return x.Exchange
	}
	return ""
}

func (x *ReqSaveKlineSeries) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *ReqSaveKlineSeries) GetPeriod() PeriodType {
	if x != nil {
		return x.Period
	}
	return PeriodType_TICK
}

func (x *ReqSaveKlineSeries) GetAdjust() PriceAdjustType {
	if x != nil {
		return x.Adjust
	}
	return PriceAdjustType_NORMAL
}

func (x *ReqSaveKlineSeries) GetList() []*Kline {
	if x != nil {
		return x.List
	}
	return nil
}

type RspSaveKlineSeries struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RspSaveKlineSeries) Reset() {
	*x = RspSaveKlineSeries{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goshare_rpc_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RspSaveKlineSeries) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RspSaveKlineSeries) ProtoMessage() {}

func (x *RspSaveKlineSeries) ProtoReflect() protoreflect.Message {
	mi := &file_goshare_rpc_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RspSaveKlineSeries.ProtoReflect.Descriptor instead.
func (*RspSaveKlineSeries) Descriptor() ([]byte, []int) {
	return file_goshare_rpc_proto_rawDescGZIP(), []int{15}
}

type ReqGetKlineSeries struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Exchange string          `protobuf:"bytes,1,opt,name=exchange,proto3" json:"exchange,omitempty"`
	Symbol   string          `protobuf:"bytes,2,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Period   PeriodType      `protobuf:"varint,3,opt,name=period,proto3,enum=goshare.PeriodType" json:"period,omitempty"`
	Adjust   PriceAdjustType `protobuf:"varint,4,opt,name=adjust,proto3,enum=goshare.PriceAdjustType" json:"adjust,omitempty"`
	Start    int64           `protobuf:"varint,5,opt,name=start,proto3" json:"start,omitempty"`
	Count    int32           `protobuf:"varint,6,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *ReqGetKlineSeries) Reset() {
	*x = ReqGetKlineSeries{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goshare_rpc_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqGetKlineSeries) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqGetKlineSeries) ProtoMessage() {}

func (x *ReqGetKlineSeries) ProtoReflect() protoreflect.Message {
	mi := &file_goshare_rpc_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqGetKlineSeries.ProtoReflect.Descriptor instead.
func (*ReqGetKlineSeries) Descriptor() ([]byte, []int) {
	return file_goshare_rpc_proto_rawDescGZIP(), []int{16}
}

func (x *ReqGetKlineSeries) GetExchange() string {
	if x != nil {
		return x.Exchange
	}
	return ""
}

func (x *ReqGetKlineSeries) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *ReqGetKlineSeries) GetPeriod() PeriodType {
	if x != nil {
		return x.Period
	}
	return PeriodType_TICK
}

func (x *ReqGetKlineSeries) GetAdjust() PriceAdjustType {
	if x != nil {
		return x.Adjust
	}
	return PriceAdjustType_NORMAL
}

func (x *ReqGetKlineSeries) GetStart() int64 {
	if x != nil {
		return x.Start
	}
	return 0
}

func (x *ReqGetKlineSeries) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type RspGetKlineSeries struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Exchange string          `protobuf:"bytes,1,opt,name=exchange,proto3" json:"exchange,omitempty"`
	Symbol   string          `protobuf:"bytes,2,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Period   PeriodType      `protobuf:"varint,3,opt,name=period,proto3,enum=goshare.PeriodType" json:"period,omitempty"`
	Adjust   PriceAdjustType `protobuf:"varint,4,opt,name=adjust,proto3,enum=goshare.PriceAdjustType" json:"adjust,omitempty"`
	List     []*Kline        `protobuf:"bytes,5,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *RspGetKlineSeries) Reset() {
	*x = RspGetKlineSeries{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goshare_rpc_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RspGetKlineSeries) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RspGetKlineSeries) ProtoMessage() {}

func (x *RspGetKlineSeries) ProtoReflect() protoreflect.Message {
	mi := &file_goshare_rpc_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RspGetKlineSeries.ProtoReflect.Descriptor instead.
func (*RspGetKlineSeries) Descriptor() ([]byte, []int) {
	return file_goshare_rpc_proto_rawDescGZIP(), []int{17}
}

func (x *RspGetKlineSeries) GetExchange() string {
	if x != nil {
		return x.Exchange
	}
	return ""
}

func (x *RspGetKlineSeries) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *RspGetKlineSeries) GetPeriod() PeriodType {
	if x != nil {
		return x.Period
	}
	return PeriodType_TICK
}

func (x *RspGetKlineSeries) GetAdjust() PriceAdjustType {
	if x != nil {
		return x.Adjust
	}
	return PriceAdjustType_NORMAL
}

func (x *RspGetKlineSeries) GetList() []*Kline {
	if x != nil {
		return x.List
	}
	return nil
}

type ReqSSEStockOptionList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ReqSSEStockOptionList) Reset() {
	*x = ReqSSEStockOptionList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goshare_rpc_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqSSEStockOptionList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqSSEStockOptionList) ProtoMessage() {}

func (x *ReqSSEStockOptionList) ProtoReflect() protoreflect.Message {
	mi := &file_goshare_rpc_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqSSEStockOptionList.ProtoReflect.Descriptor instead.
func (*ReqSSEStockOptionList) Descriptor() ([]byte, []int) {
	return file_goshare_rpc_proto_rawDescGZIP(), []int{18}
}

type RspSSEStockOptionList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*spider.SSEStockOption `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *RspSSEStockOptionList) Reset() {
	*x = RspSSEStockOptionList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goshare_rpc_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RspSSEStockOptionList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RspSSEStockOptionList) ProtoMessage() {}

func (x *RspSSEStockOptionList) ProtoReflect() protoreflect.Message {
	mi := &file_goshare_rpc_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RspSSEStockOptionList.ProtoReflect.Descriptor instead.
func (*RspSSEStockOptionList) Descriptor() ([]byte, []int) {
	return file_goshare_rpc_proto_rawDescGZIP(), []int{19}
}

func (x *RspSSEStockOptionList) GetList() []*spider.SSEStockOption {
	if x != nil {
		return x.List
	}
	return nil
}

type ReqSaveBonusHistory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Exchange string          `protobuf:"bytes,1,opt,name=exchange,proto3" json:"exchange,omitempty"`
	Symbol   string          `protobuf:"bytes,2,opt,name=symbol,proto3" json:"symbol,omitempty"`
	List     []*spider.Bonus `protobuf:"bytes,3,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *ReqSaveBonusHistory) Reset() {
	*x = ReqSaveBonusHistory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goshare_rpc_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqSaveBonusHistory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqSaveBonusHistory) ProtoMessage() {}

func (x *ReqSaveBonusHistory) ProtoReflect() protoreflect.Message {
	mi := &file_goshare_rpc_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqSaveBonusHistory.ProtoReflect.Descriptor instead.
func (*ReqSaveBonusHistory) Descriptor() ([]byte, []int) {
	return file_goshare_rpc_proto_rawDescGZIP(), []int{20}
}

func (x *ReqSaveBonusHistory) GetExchange() string {
	if x != nil {
		return x.Exchange
	}
	return ""
}

func (x *ReqSaveBonusHistory) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *ReqSaveBonusHistory) GetList() []*spider.Bonus {
	if x != nil {
		return x.List
	}
	return nil
}

type RspSaveBonusHistory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RspSaveBonusHistory) Reset() {
	*x = RspSaveBonusHistory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goshare_rpc_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RspSaveBonusHistory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RspSaveBonusHistory) ProtoMessage() {}

func (x *RspSaveBonusHistory) ProtoReflect() protoreflect.Message {
	mi := &file_goshare_rpc_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RspSaveBonusHistory.ProtoReflect.Descriptor instead.
func (*RspSaveBonusHistory) Descriptor() ([]byte, []int) {
	return file_goshare_rpc_proto_rawDescGZIP(), []int{21}
}

type ReqGetBonusHistory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Exchange string `protobuf:"bytes,1,opt,name=exchange,proto3" json:"exchange,omitempty"`
	Symbol   string `protobuf:"bytes,2,opt,name=symbol,proto3" json:"symbol,omitempty"`
}

func (x *ReqGetBonusHistory) Reset() {
	*x = ReqGetBonusHistory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goshare_rpc_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqGetBonusHistory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqGetBonusHistory) ProtoMessage() {}

func (x *ReqGetBonusHistory) ProtoReflect() protoreflect.Message {
	mi := &file_goshare_rpc_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqGetBonusHistory.ProtoReflect.Descriptor instead.
func (*ReqGetBonusHistory) Descriptor() ([]byte, []int) {
	return file_goshare_rpc_proto_rawDescGZIP(), []int{22}
}

func (x *ReqGetBonusHistory) GetExchange() string {
	if x != nil {
		return x.Exchange
	}
	return ""
}

func (x *ReqGetBonusHistory) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

type RspGetBonusHistory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Exchange string          `protobuf:"bytes,1,opt,name=exchange,proto3" json:"exchange,omitempty"`
	Symbol   string          `protobuf:"bytes,2,opt,name=symbol,proto3" json:"symbol,omitempty"`
	List     []*spider.Bonus `protobuf:"bytes,3,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *RspGetBonusHistory) Reset() {
	*x = RspGetBonusHistory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goshare_rpc_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RspGetBonusHistory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RspGetBonusHistory) ProtoMessage() {}

func (x *RspGetBonusHistory) ProtoReflect() protoreflect.Message {
	mi := &file_goshare_rpc_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RspGetBonusHistory.ProtoReflect.Descriptor instead.
func (*RspGetBonusHistory) Descriptor() ([]byte, []int) {
	return file_goshare_rpc_proto_rawDescGZIP(), []int{23}
}

func (x *RspGetBonusHistory) GetExchange() string {
	if x != nil {
		return x.Exchange
	}
	return ""
}

func (x *RspGetBonusHistory) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *RspGetBonusHistory) GetList() []*spider.Bonus {
	if x != nil {
		return x.List
	}
	return nil
}

type ReqBatchDelete struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Keys [][]byte `protobuf:"bytes,1,rep,name=keys,proto3" json:"keys,omitempty"`
}

func (x *ReqBatchDelete) Reset() {
	*x = ReqBatchDelete{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goshare_rpc_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqBatchDelete) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqBatchDelete) ProtoMessage() {}

func (x *ReqBatchDelete) ProtoReflect() protoreflect.Message {
	mi := &file_goshare_rpc_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqBatchDelete.ProtoReflect.Descriptor instead.
func (*ReqBatchDelete) Descriptor() ([]byte, []int) {
	return file_goshare_rpc_proto_rawDescGZIP(), []int{24}
}

func (x *ReqBatchDelete) GetKeys() [][]byte {
	if x != nil {
		return x.Keys
	}
	return nil
}

type RspBatchDelete struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RspBatchDelete) Reset() {
	*x = RspBatchDelete{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goshare_rpc_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RspBatchDelete) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RspBatchDelete) ProtoMessage() {}

func (x *RspBatchDelete) ProtoReflect() protoreflect.Message {
	mi := &file_goshare_rpc_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RspBatchDelete.ProtoReflect.Descriptor instead.
func (*RspBatchDelete) Descriptor() ([]byte, []int) {
	return file_goshare_rpc_proto_rawDescGZIP(), []int{25}
}

type ReqBatchGet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Keys [][]byte `protobuf:"bytes,1,rep,name=keys,proto3" json:"keys,omitempty"`
}

func (x *ReqBatchGet) Reset() {
	*x = ReqBatchGet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goshare_rpc_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqBatchGet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqBatchGet) ProtoMessage() {}

func (x *ReqBatchGet) ProtoReflect() protoreflect.Message {
	mi := &file_goshare_rpc_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqBatchGet.ProtoReflect.Descriptor instead.
func (*ReqBatchGet) Descriptor() ([]byte, []int) {
	return file_goshare_rpc_proto_rawDescGZIP(), []int{26}
}

func (x *ReqBatchGet) GetKeys() [][]byte {
	if x != nil {
		return x.Keys
	}
	return nil
}

type RspBatchGet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Values [][]byte `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"`
}

func (x *RspBatchGet) Reset() {
	*x = RspBatchGet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goshare_rpc_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RspBatchGet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RspBatchGet) ProtoMessage() {}

func (x *RspBatchGet) ProtoReflect() protoreflect.Message {
	mi := &file_goshare_rpc_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RspBatchGet.ProtoReflect.Descriptor instead.
func (*RspBatchGet) Descriptor() ([]byte, []int) {
	return file_goshare_rpc_proto_rawDescGZIP(), []int{27}
}

func (x *RspBatchGet) GetValues() [][]byte {
	if x != nil {
		return x.Values
	}
	return nil
}

type ReqBatchPut struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Keys   [][]byte `protobuf:"bytes,1,rep,name=keys,proto3" json:"keys,omitempty"`
	Values [][]byte `protobuf:"bytes,2,rep,name=values,proto3" json:"values,omitempty"`
}

func (x *ReqBatchPut) Reset() {
	*x = ReqBatchPut{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goshare_rpc_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqBatchPut) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqBatchPut) ProtoMessage() {}

func (x *ReqBatchPut) ProtoReflect() protoreflect.Message {
	mi := &file_goshare_rpc_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqBatchPut.ProtoReflect.Descriptor instead.
func (*ReqBatchPut) Descriptor() ([]byte, []int) {
	return file_goshare_rpc_proto_rawDescGZIP(), []int{28}
}

func (x *ReqBatchPut) GetKeys() [][]byte {
	if x != nil {
		return x.Keys
	}
	return nil
}

func (x *ReqBatchPut) GetValues() [][]byte {
	if x != nil {
		return x.Values
	}
	return nil
}

type RspBatchPut struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RspBatchPut) Reset() {
	*x = RspBatchPut{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goshare_rpc_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RspBatchPut) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RspBatchPut) ProtoMessage() {}

func (x *RspBatchPut) ProtoReflect() protoreflect.Message {
	mi := &file_goshare_rpc_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RspBatchPut.ProtoReflect.Descriptor instead.
func (*RspBatchPut) Descriptor() ([]byte, []int) {
	return file_goshare_rpc_proto_rawDescGZIP(), []int{29}
}

type ReqDelete struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key []byte `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *ReqDelete) Reset() {
	*x = ReqDelete{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goshare_rpc_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqDelete) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqDelete) ProtoMessage() {}

func (x *ReqDelete) ProtoReflect() protoreflect.Message {
	mi := &file_goshare_rpc_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqDelete.ProtoReflect.Descriptor instead.
func (*ReqDelete) Descriptor() ([]byte, []int) {
	return file_goshare_rpc_proto_rawDescGZIP(), []int{30}
}

func (x *ReqDelete) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

type RspDelete struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RspDelete) Reset() {
	*x = RspDelete{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goshare_rpc_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RspDelete) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RspDelete) ProtoMessage() {}

func (x *RspDelete) ProtoReflect() protoreflect.Message {
	mi := &file_goshare_rpc_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RspDelete.ProtoReflect.Descriptor instead.
func (*RspDelete) Descriptor() ([]byte, []int) {
	return file_goshare_rpc_proto_rawDescGZIP(), []int{31}
}

type ReqGet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key []byte `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *ReqGet) Reset() {
	*x = ReqGet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goshare_rpc_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqGet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqGet) ProtoMessage() {}

func (x *ReqGet) ProtoReflect() protoreflect.Message {
	mi := &file_goshare_rpc_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqGet.ProtoReflect.Descriptor instead.
func (*ReqGet) Descriptor() ([]byte, []int) {
	return file_goshare_rpc_proto_rawDescGZIP(), []int{32}
}

func (x *ReqGet) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

type RspGet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value    []byte `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	NotFound bool   `protobuf:"varint,2,opt,name=not_found,json=notFound,proto3" json:"not_found,omitempty"`
}

func (x *RspGet) Reset() {
	*x = RspGet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goshare_rpc_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RspGet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RspGet) ProtoMessage() {}

func (x *RspGet) ProtoReflect() protoreflect.Message {
	mi := &file_goshare_rpc_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RspGet.ProtoReflect.Descriptor instead.
func (*RspGet) Descriptor() ([]byte, []int) {
	return file_goshare_rpc_proto_rawDescGZIP(), []int{33}
}

func (x *RspGet) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *RspGet) GetNotFound() bool {
	if x != nil {
		return x.NotFound
	}
	return false
}

type ReqPut struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   []byte `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value []byte `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *ReqPut) Reset() {
	*x = ReqPut{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goshare_rpc_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqPut) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqPut) ProtoMessage() {}

func (x *ReqPut) ProtoReflect() protoreflect.Message {
	mi := &file_goshare_rpc_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqPut.ProtoReflect.Descriptor instead.
func (*ReqPut) Descriptor() ([]byte, []int) {
	return file_goshare_rpc_proto_rawDescGZIP(), []int{34}
}

func (x *ReqPut) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *ReqPut) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

type RspPut struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RspPut) Reset() {
	*x = RspPut{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goshare_rpc_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RspPut) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RspPut) ProtoMessage() {}

func (x *RspPut) ProtoReflect() protoreflect.Message {
	mi := &file_goshare_rpc_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RspPut.ProtoReflect.Descriptor instead.
func (*RspPut) Descriptor() ([]byte, []int) {
	return file_goshare_rpc_proto_rawDescGZIP(), []int{35}
}

type ReqReverseScan struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Start []byte `protobuf:"bytes,1,opt,name=start,proto3" json:"start,omitempty"`
	End   []byte `protobuf:"bytes,2,opt,name=end,proto3" json:"end,omitempty"`
	Limit int32  `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *ReqReverseScan) Reset() {
	*x = ReqReverseScan{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goshare_rpc_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqReverseScan) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqReverseScan) ProtoMessage() {}

func (x *ReqReverseScan) ProtoReflect() protoreflect.Message {
	mi := &file_goshare_rpc_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqReverseScan.ProtoReflect.Descriptor instead.
func (*ReqReverseScan) Descriptor() ([]byte, []int) {
	return file_goshare_rpc_proto_rawDescGZIP(), []int{36}
}

func (x *ReqReverseScan) GetStart() []byte {
	if x != nil {
		return x.Start
	}
	return nil
}

func (x *ReqReverseScan) GetEnd() []byte {
	if x != nil {
		return x.End
	}
	return nil
}

func (x *ReqReverseScan) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type RspReverseScan struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Values [][]byte `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"`
}

func (x *RspReverseScan) Reset() {
	*x = RspReverseScan{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goshare_rpc_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RspReverseScan) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RspReverseScan) ProtoMessage() {}

func (x *RspReverseScan) ProtoReflect() protoreflect.Message {
	mi := &file_goshare_rpc_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RspReverseScan.ProtoReflect.Descriptor instead.
func (*RspReverseScan) Descriptor() ([]byte, []int) {
	return file_goshare_rpc_proto_rawDescGZIP(), []int{37}
}

func (x *RspReverseScan) GetValues() [][]byte {
	if x != nil {
		return x.Values
	}
	return nil
}

type ReqScan struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Start []byte `protobuf:"bytes,1,opt,name=start,proto3" json:"start,omitempty"`
	End   []byte `protobuf:"bytes,2,opt,name=end,proto3" json:"end,omitempty"`
	Limit int32  `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *ReqScan) Reset() {
	*x = ReqScan{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goshare_rpc_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqScan) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqScan) ProtoMessage() {}

func (x *ReqScan) ProtoReflect() protoreflect.Message {
	mi := &file_goshare_rpc_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqScan.ProtoReflect.Descriptor instead.
func (*ReqScan) Descriptor() ([]byte, []int) {
	return file_goshare_rpc_proto_rawDescGZIP(), []int{38}
}

func (x *ReqScan) GetStart() []byte {
	if x != nil {
		return x.Start
	}
	return nil
}

func (x *ReqScan) GetEnd() []byte {
	if x != nil {
		return x.End
	}
	return nil
}

func (x *ReqScan) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type RspScan struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Values [][]byte `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"`
}

func (x *RspScan) Reset() {
	*x = RspScan{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goshare_rpc_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RspScan) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RspScan) ProtoMessage() {}

func (x *RspScan) ProtoReflect() protoreflect.Message {
	mi := &file_goshare_rpc_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RspScan.ProtoReflect.Descriptor instead.
func (*RspScan) Descriptor() ([]byte, []int) {
	return file_goshare_rpc_proto_rawDescGZIP(), []int{39}
}

func (x *RspScan) GetValues() [][]byte {
	if x != nil {
		return x.Values
	}
	return nil
}

var File_goshare_rpc_proto protoreflect.FileDescriptor

var file_goshare_rpc_proto_rawDesc = []byte{
	0x0a, 0x11, 0x67, 0x6f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x2f, 0x72, 0x70, 0x63, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x07, 0x67, 0x6f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x1a, 0x14, 0x67, 0x6f,
	0x73, 0x68, 0x61, 0x72, 0x65, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x19, 0x67, 0x6f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x2f, 0x6d, 0x61, 0x72, 0x6b,
	0x65, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x18, 0x67,
	0x6f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x2f, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x10, 0x73, 0x70, 0x69, 0x64, 0x65, 0x72, 0x2f,
	0x73, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x13, 0x73, 0x70, 0x69, 0x64, 0x65,
	0x72, 0x2f, 0x78, 0x75, 0x65, 0x71, 0x69, 0x75, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x32,
	0x0a, 0x14, 0x52, 0x65, 0x71, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65,
	0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x22, 0x3f, 0x0a, 0x14, 0x52, 0x73, 0x70, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x73, 0x74,
	0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x04, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x67, 0x6f, 0x73, 0x68, 0x61,
	0x72, 0x65, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x04, 0x6c,
	0x69, 0x73, 0x74, 0x22, 0x48, 0x0a, 0x11, 0x52, 0x65, 0x71, 0x53, 0x61, 0x76, 0x65, 0x49, 0x6e,
	0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x33, 0x0a, 0x0a, 0x69, 0x6e, 0x73, 0x74,
	0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x67,
	0x6f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x13, 0x0a,
	0x11, 0x52, 0x73, 0x70, 0x53, 0x61, 0x76, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65,
	0x6e, 0x74, 0x22, 0x46, 0x0a, 0x10, 0x52, 0x65, 0x71, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x73, 0x74,
	0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x22, 0x47, 0x0a, 0x10, 0x52, 0x73,
	0x70, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x33,
	0x0a, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x67, 0x6f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x2e, 0x49, 0x6e, 0x73,
	0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d,
	0x65, 0x6e, 0x74, 0x22, 0x77, 0x0a, 0x0c, 0x52, 0x65, 0x71, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x62,
	0x69, 0x6e, 0x61, 0x72, 0x79, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0a, 0x62, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x44, 0x61, 0x74, 0x61, 0x22, 0x0e, 0x0a, 0x0c,
	0x52, 0x73, 0x70, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x22, 0x40, 0x0a, 0x0e,
	0x52, 0x65, 0x71, 0x55, 0x6e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x10,
	0x0a, 0x0e, 0x52, 0x73, 0x70, 0x55, 0x6e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65,
	0x22, 0x7f, 0x0a, 0x13, 0x52, 0x65, 0x71, 0x43, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65, 0x53, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x78, 0x63, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x78, 0x63, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x34, 0x0a, 0x0b, 0x70,
	0x65, 0x72, 0x69, 0x6f, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0e,
	0x32, 0x13, 0x2e, 0x67, 0x6f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x2e, 0x50, 0x65, 0x72, 0x69, 0x6f,
	0x64, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x4c, 0x69, 0x73,
	0x74, 0x22, 0xd2, 0x01, 0x0a, 0x13, 0x52, 0x73, 0x70, 0x43, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65,
	0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x78, 0x63,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x78, 0x63,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x2e, 0x0a,
	0x07, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x67, 0x6f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x2e, 0x4b, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x65,
	0x72, 0x69, 0x65, 0x73, 0x52, 0x07, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x2f, 0x0a,
	0x04, 0x74, 0x69, 0x63, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f,
	0x73, 0x68, 0x61, 0x72, 0x65, 0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61,
	0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x52, 0x04, 0x74, 0x69, 0x63, 0x6b, 0x12, 0x26,
	0x0a, 0x06, 0x6b, 0x6c, 0x69, 0x6e, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x67, 0x6f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x2e, 0x4b, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x06,
	0x6b, 0x6c, 0x69, 0x6e, 0x65, 0x73, 0x22, 0x6e, 0x0a, 0x10, 0x52, 0x65, 0x71, 0x47, 0x65, 0x74,
	0x54, 0x69, 0x63, 0x6b, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x78,
	0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x78,
	0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x14,
	0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x03, 0x65, 0x6e, 0x64, 0x22, 0x9f, 0x01, 0x0a, 0x10, 0x52, 0x73, 0x70, 0x47, 0x65,
	0x74, 0x54, 0x69, 0x63, 0x6b, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x65,
	0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65,
	0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f,
	0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12,
	0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x03, 0x65, 0x6e, 0x64, 0x12, 0x2f, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x2e,
	0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68,
	0x6f, 0x74, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0xcb, 0x01, 0x0a, 0x12, 0x52, 0x65, 0x71,
	0x53, 0x61, 0x76, 0x65, 0x4b, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x12,
	0x1a, 0x0a, 0x08, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6d,
	0x62, 0x6f, 0x6c, 0x12, 0x2b, 0x0a, 0x06, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x67, 0x6f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x2e, 0x50, 0x65,
	0x72, 0x69, 0x6f, 0x64, 0x54, 0x79, 0x70, 0x65, 0x52, 0x06, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64,
	0x12, 0x30, 0x0a, 0x06, 0x61, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x18, 0x2e, 0x67, 0x6f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x2e, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x41, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x06, 0x61, 0x64, 0x6a, 0x75,
	0x73, 0x74, 0x12, 0x22, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x67, 0x6f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x2e, 0x4b, 0x6c, 0x69, 0x6e, 0x65,
	0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x14, 0x0a, 0x12, 0x52, 0x73, 0x70, 0x53, 0x61, 0x76,
	0x65, 0x4b, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x22, 0xd2, 0x01, 0x0a,
	0x11, 0x52, 0x65, 0x71, 0x47, 0x65, 0x74, 0x4b, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x65, 0x72, 0x69,
	0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x2b, 0x0a, 0x06, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x67, 0x6f, 0x73, 0x68, 0x61, 0x72, 0x65,
	0x2e, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x54, 0x79, 0x70, 0x65, 0x52, 0x06, 0x70, 0x65, 0x72,
	0x69, 0x6f, 0x64, 0x12, 0x30, 0x0a, 0x06, 0x61, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x67, 0x6f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x2e, 0x50, 0x72,
	0x69, 0x63, 0x65, 0x41, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x06, 0x61,
	0x64, 0x6a, 0x75, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x22, 0xca, 0x01, 0x0a, 0x11, 0x52, 0x73, 0x70, 0x47, 0x65, 0x74, 0x4b, 0x6c, 0x69, 0x6e,
	0x65, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x78, 0x63, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x78, 0x63, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x2b, 0x0a, 0x06, 0x70,
	0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x67, 0x6f,
	0x73, 0x68, 0x61, 0x72, 0x65, 0x2e, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x06, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x12, 0x30, 0x0a, 0x06, 0x61, 0x64, 0x6a, 0x75,
	0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x67, 0x6f, 0x73, 0x68, 0x61,
	0x72, 0x65, 0x2e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x41, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x06, 0x61, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x04, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x67, 0x6f, 0x73, 0x68, 0x61,
	0x72, 0x65, 0x2e, 0x4b, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x17,
	0x0a, 0x15, 0x52, 0x65, 0x71, 0x53, 0x53, 0x45, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x4b, 0x0a, 0x15, 0x52, 0x73, 0x70, 0x53, 0x53,
	0x45, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x32, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x67, 0x6f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x2e, 0x73, 0x70, 0x69, 0x64, 0x65, 0x72, 0x2e,
	0x53, 0x53, 0x45, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x04,
	0x6c, 0x69, 0x73, 0x74, 0x22, 0x74, 0x0a, 0x13, 0x52, 0x65, 0x71, 0x53, 0x61, 0x76, 0x65, 0x42,
	0x6f, 0x6e, 0x75, 0x73, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x65,
	0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65,
	0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f,
	0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12,
	0x29, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x67, 0x6f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x2e, 0x73, 0x70, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x42,
	0x6f, 0x6e, 0x75, 0x73, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x15, 0x0a, 0x13, 0x52, 0x73,
	0x70, 0x53, 0x61, 0x76, 0x65, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72,
	0x79, 0x22, 0x48, 0x0a, 0x12, 0x52, 0x65, 0x71, 0x47, 0x65, 0x74, 0x42, 0x6f, 0x6e, 0x75, 0x73,
	0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x78, 0x63, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x78, 0x63, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x22, 0x73, 0x0a, 0x12, 0x52,
	0x73, 0x70, 0x47, 0x65, 0x74, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72,
	0x79, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73,
	0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x29, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x67, 0x6f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x2e, 0x73, 0x70,
	0x69, 0x64, 0x65, 0x72, 0x2e, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74,
	0x22, 0x24, 0x0a, 0x0e, 0x52, 0x65, 0x71, 0x42, 0x61, 0x74, 0x63, 0x68, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0c,
	0x52, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x22, 0x10, 0x0a, 0x0e, 0x52, 0x73, 0x70, 0x42, 0x61, 0x74,
	0x63, 0x68, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x22, 0x21, 0x0a, 0x0b, 0x52, 0x65, 0x71, 0x42,
	0x61, 0x74, 0x63, 0x68, 0x47, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x22, 0x25, 0x0a, 0x0b, 0x52,
	0x73, 0x70, 0x42, 0x61, 0x74, 0x63, 0x68, 0x47, 0x65, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x73, 0x22, 0x39, 0x0a, 0x0b, 0x52, 0x65, 0x71, 0x42, 0x61, 0x74, 0x63, 0x68, 0x50, 0x75,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0c, 0x52,
	0x04, 0x6b, 0x65, 0x79, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x22, 0x0d, 0x0a,
	0x0b, 0x52, 0x73, 0x70, 0x42, 0x61, 0x74, 0x63, 0x68, 0x50, 0x75, 0x74, 0x22, 0x1d, 0x0a, 0x09,
	0x52, 0x65, 0x71, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x22, 0x0b, 0x0a, 0x09, 0x52,
	0x73, 0x70, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x22, 0x1a, 0x0a, 0x06, 0x52, 0x65, 0x71, 0x47,
	0x65, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x22, 0x3b, 0x0a, 0x06, 0x52, 0x73, 0x70, 0x47, 0x65, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6e, 0x6f, 0x74, 0x5f, 0x66, 0x6f, 0x75, 0x6e,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x6e, 0x6f, 0x74, 0x46, 0x6f, 0x75, 0x6e,
	0x64, 0x22, 0x30, 0x0a, 0x06, 0x52, 0x65, 0x71, 0x50, 0x75, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x22, 0x08, 0x0a, 0x06, 0x52, 0x73, 0x70, 0x50, 0x75, 0x74, 0x22, 0x4e, 0x0a,
	0x0e, 0x52, 0x65, 0x71, 0x52, 0x65, 0x76, 0x65, 0x72, 0x73, 0x65, 0x53, 0x63, 0x61, 0x6e, 0x12,
	0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x03, 0x65, 0x6e, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x28, 0x0a,
	0x0e, 0x52, 0x73, 0x70, 0x52, 0x65, 0x76, 0x65, 0x72, 0x73, 0x65, 0x53, 0x63, 0x61, 0x6e, 0x12,
	0x16, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0c, 0x52,
	0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x22, 0x47, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x53, 0x63,
	0x61, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x65, 0x6e, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x22, 0x21, 0x0a, 0x07, 0x52, 0x73, 0x70, 0x53, 0x63, 0x61, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x06, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x73, 0x32, 0xe4, 0x07, 0x0a, 0x0a, 0x4b, 0x6c, 0x69, 0x6e, 0x65, 0x43, 0x61, 0x63,
	0x68, 0x65, 0x12, 0x4d, 0x0a, 0x0f, 0x53, 0x61, 0x76, 0x65, 0x4b, 0x6c, 0x69, 0x6e, 0x65, 0x53,
	0x65, 0x72, 0x69, 0x65, 0x73, 0x12, 0x1b, 0x2e, 0x67, 0x6f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x2e,
	0x52, 0x65, 0x71, 0x53, 0x61, 0x76, 0x65, 0x4b, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x65, 0x72, 0x69,
	0x65, 0x73, 0x1a, 0x1b, 0x2e, 0x67, 0x6f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x2e, 0x52, 0x73, 0x70,
	0x53, 0x61, 0x76, 0x65, 0x4b, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x22,
	0x00, 0x12, 0x4a, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x4b, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x65, 0x72,
	0x69, 0x65, 0x73, 0x12, 0x1a, 0x2e, 0x67, 0x6f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x2e, 0x52, 0x65,
	0x71, 0x47, 0x65, 0x74, 0x4b, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x1a,
	0x1a, 0x2e, 0x67, 0x6f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x2e, 0x52, 0x73, 0x70, 0x47, 0x65, 0x74,
	0x4b, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x22, 0x00, 0x12, 0x4a, 0x0a,
	0x0e, 0x53, 0x61, 0x76, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x12,
	0x1a, 0x2e, 0x67, 0x6f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x2e, 0x52, 0x65, 0x71, 0x53, 0x61, 0x76,
	0x65, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x1a, 0x1a, 0x2e, 0x67, 0x6f,
	0x73, 0x68, 0x61, 0x72, 0x65, 0x2e, 0x52, 0x73, 0x70, 0x53, 0x61, 0x76, 0x65, 0x49, 0x6e, 0x73,
	0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x00, 0x12, 0x47, 0x0a, 0x0d, 0x47, 0x65, 0x74,
	0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x19, 0x2e, 0x67, 0x6f, 0x73,
	0x68, 0x61, 0x72, 0x65, 0x2e, 0x52, 0x65, 0x71, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x72,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x1a, 0x19, 0x2e, 0x67, 0x6f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x2e,
	0x52, 0x73, 0x70, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74,
	0x22, 0x00, 0x12, 0x53, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d,
	0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1d, 0x2e, 0x67, 0x6f, 0x73, 0x68, 0x61, 0x72,
	0x65, 0x2e, 0x52, 0x65, 0x71, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65,
	0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x67, 0x6f, 0x73, 0x68, 0x61, 0x72, 0x65,
	0x2e, 0x52, 0x73, 0x70, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x00, 0x12, 0x50, 0x0a, 0x10, 0x53, 0x61, 0x76, 0x65, 0x42,
	0x6f, 0x6e, 0x75, 0x73, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x1c, 0x2e, 0x67, 0x6f,
	0x73, 0x68, 0x61, 0x72, 0x65, 0x2e, 0x52, 0x65, 0x71, 0x53, 0x61, 0x76, 0x65, 0x42, 0x6f, 0x6e,
	0x75, 0x73, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x1a, 0x1c, 0x2e, 0x67, 0x6f, 0x73, 0x68,
	0x61, 0x72, 0x65, 0x2e, 0x52, 0x73, 0x70, 0x53, 0x61, 0x76, 0x65, 0x42, 0x6f, 0x6e, 0x75, 0x73,
	0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x22, 0x00, 0x12, 0x4d, 0x0a, 0x0f, 0x47, 0x65, 0x74,
	0x42, 0x6f, 0x6e, 0x75, 0x73, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x1b, 0x2e, 0x67,
	0x6f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x2e, 0x52, 0x65, 0x71, 0x47, 0x65, 0x74, 0x42, 0x6f, 0x6e,
	0x75, 0x73, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x1a, 0x1b, 0x2e, 0x67, 0x6f, 0x73, 0x68,
	0x61, 0x72, 0x65, 0x2e, 0x52, 0x73, 0x70, 0x47, 0x65, 0x74, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x48,
	0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x22, 0x00, 0x12, 0x41, 0x0a, 0x0b, 0x42, 0x61, 0x74, 0x63,
	0x68, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x17, 0x2e, 0x67, 0x6f, 0x73, 0x68, 0x61, 0x72,
	0x65, 0x2e, 0x52, 0x65, 0x71, 0x42, 0x61, 0x74, 0x63, 0x68, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x1a, 0x17, 0x2e, 0x67, 0x6f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x2e, 0x52, 0x73, 0x70, 0x42, 0x61,
	0x74, 0x63, 0x68, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x22, 0x00, 0x12, 0x38, 0x0a, 0x08, 0x42,
	0x61, 0x74, 0x63, 0x68, 0x47, 0x65, 0x74, 0x12, 0x14, 0x2e, 0x67, 0x6f, 0x73, 0x68, 0x61, 0x72,
	0x65, 0x2e, 0x52, 0x65, 0x71, 0x42, 0x61, 0x74, 0x63, 0x68, 0x47, 0x65, 0x74, 0x1a, 0x14, 0x2e,
	0x67, 0x6f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x2e, 0x52, 0x73, 0x70, 0x42, 0x61, 0x74, 0x63, 0x68,
	0x47, 0x65, 0x74, 0x22, 0x00, 0x12, 0x38, 0x0a, 0x08, 0x42, 0x61, 0x74, 0x63, 0x68, 0x50, 0x75,
	0x74, 0x12, 0x14, 0x2e, 0x67, 0x6f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x2e, 0x52, 0x65, 0x71, 0x42,
	0x61, 0x74, 0x63, 0x68, 0x50, 0x75, 0x74, 0x1a, 0x14, 0x2e, 0x67, 0x6f, 0x73, 0x68, 0x61, 0x72,
	0x65, 0x2e, 0x52, 0x73, 0x70, 0x42, 0x61, 0x74, 0x63, 0x68, 0x50, 0x75, 0x74, 0x22, 0x00, 0x12,
	0x32, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x12, 0x2e, 0x67, 0x6f, 0x73, 0x68,
	0x61, 0x72, 0x65, 0x2e, 0x52, 0x65, 0x71, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x1a, 0x12, 0x2e,
	0x67, 0x6f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x2e, 0x52, 0x73, 0x70, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x22, 0x00, 0x12, 0x29, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x0f, 0x2e, 0x67, 0x6f, 0x73,
	0x68, 0x61, 0x72, 0x65, 0x2e, 0x52, 0x65, 0x71, 0x47, 0x65, 0x74, 0x1a, 0x0f, 0x2e, 0x67, 0x6f,
	0x73, 0x68, 0x61, 0x72, 0x65, 0x2e, 0x52, 0x73, 0x70, 0x47, 0x65, 0x74, 0x22, 0x00, 0x12, 0x29,
	0x0a, 0x03, 0x50, 0x75, 0x74, 0x12, 0x0f, 0x2e, 0x67, 0x6f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x2e,
	0x52, 0x65, 0x71, 0x50, 0x75, 0x74, 0x1a, 0x0f, 0x2e, 0x67, 0x6f, 0x73, 0x68, 0x61, 0x72, 0x65,
	0x2e, 0x52, 0x73, 0x70, 0x50, 0x75, 0x74, 0x22, 0x00, 0x12, 0x41, 0x0a, 0x0b, 0x52, 0x65, 0x76,
	0x65, 0x72, 0x73, 0x65, 0x53, 0x63, 0x61, 0x6e, 0x12, 0x17, 0x2e, 0x67, 0x6f, 0x73, 0x68, 0x61,
	0x72, 0x65, 0x2e, 0x52, 0x65, 0x71, 0x52, 0x65, 0x76, 0x65, 0x72, 0x73, 0x65, 0x53, 0x63, 0x61,
	0x6e, 0x1a, 0x17, 0x2e, 0x67, 0x6f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x2e, 0x52, 0x73, 0x70, 0x52,
	0x65, 0x76, 0x65, 0x72, 0x73, 0x65, 0x53, 0x63, 0x61, 0x6e, 0x22, 0x00, 0x12, 0x2c, 0x0a, 0x04,
	0x53, 0x63, 0x61, 0x6e, 0x12, 0x10, 0x2e, 0x67, 0x6f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x2e, 0x52,
	0x65, 0x71, 0x53, 0x63, 0x61, 0x6e, 0x1a, 0x10, 0x2e, 0x67, 0x6f, 0x73, 0x68, 0x61, 0x72, 0x65,
	0x2e, 0x52, 0x73, 0x70, 0x53, 0x63, 0x61, 0x6e, 0x22, 0x00, 0x42, 0x30, 0x5a, 0x2e, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6a, 0x61, 0x6d, 0x65, 0x73, 0x73, 0x68,
	0x65, 0x6e, 0x6a, 0x69, 0x61, 0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x73, 0x72,
	0x63, 0x2f, 0x67, 0x6f, 0x2f, 0x67, 0x6f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_goshare_rpc_proto_rawDescOnce sync.Once
	file_goshare_rpc_proto_rawDescData = file_goshare_rpc_proto_rawDesc
)

func file_goshare_rpc_proto_rawDescGZIP() []byte {
	file_goshare_rpc_proto_rawDescOnce.Do(func() {
		file_goshare_rpc_proto_rawDescData = protoimpl.X.CompressGZIP(file_goshare_rpc_proto_rawDescData)
	})
	return file_goshare_rpc_proto_rawDescData
}

var file_goshare_rpc_proto_msgTypes = make([]protoimpl.MessageInfo, 40)
var file_goshare_rpc_proto_goTypes = []interface{}{
	(*ReqGetInstrumentList)(nil),  // 0: goshare.ReqGetInstrumentList
	(*RspGetInstrumentList)(nil),  // 1: goshare.RspGetInstrumentList
	(*ReqSaveInstrument)(nil),     // 2: goshare.ReqSaveInstrument
	(*RspSaveInstrument)(nil),     // 3: goshare.RspSaveInstrument
	(*ReqGetInstrument)(nil),      // 4: goshare.ReqGetInstrument
	(*RspGetInstrument)(nil),      // 5: goshare.RspGetInstrument
	(*ReqSubscribe)(nil),          // 6: goshare.ReqSubscribe
	(*RspSubscribe)(nil),          // 7: goshare.RspSubscribe
	(*ReqUnSubscribe)(nil),        // 8: goshare.ReqUnSubscribe
	(*RspUnSubscribe)(nil),        // 9: goshare.RspUnSubscribe
	(*ReqCombineSubscribe)(nil),   // 10: goshare.ReqCombineSubscribe
	(*RspCombineSubscribe)(nil),   // 11: goshare.RspCombineSubscribe
	(*ReqGetTickSeries)(nil),      // 12: goshare.ReqGetTickSeries
	(*RspGetTickSeries)(nil),      // 13: goshare.RspGetTickSeries
	(*ReqSaveKlineSeries)(nil),    // 14: goshare.ReqSaveKlineSeries
	(*RspSaveKlineSeries)(nil),    // 15: goshare.RspSaveKlineSeries
	(*ReqGetKlineSeries)(nil),     // 16: goshare.ReqGetKlineSeries
	(*RspGetKlineSeries)(nil),     // 17: goshare.RspGetKlineSeries
	(*ReqSSEStockOptionList)(nil), // 18: goshare.ReqSSEStockOptionList
	(*RspSSEStockOptionList)(nil), // 19: goshare.RspSSEStockOptionList
	(*ReqSaveBonusHistory)(nil),   // 20: goshare.ReqSaveBonusHistory
	(*RspSaveBonusHistory)(nil),   // 21: goshare.RspSaveBonusHistory
	(*ReqGetBonusHistory)(nil),    // 22: goshare.ReqGetBonusHistory
	(*RspGetBonusHistory)(nil),    // 23: goshare.RspGetBonusHistory
	(*ReqBatchDelete)(nil),        // 24: goshare.ReqBatchDelete
	(*RspBatchDelete)(nil),        // 25: goshare.RspBatchDelete
	(*ReqBatchGet)(nil),           // 26: goshare.ReqBatchGet
	(*RspBatchGet)(nil),           // 27: goshare.RspBatchGet
	(*ReqBatchPut)(nil),           // 28: goshare.ReqBatchPut
	(*RspBatchPut)(nil),           // 29: goshare.RspBatchPut
	(*ReqDelete)(nil),             // 30: goshare.ReqDelete
	(*RspDelete)(nil),             // 31: goshare.RspDelete
	(*ReqGet)(nil),                // 32: goshare.ReqGet
	(*RspGet)(nil),                // 33: goshare.RspGet
	(*ReqPut)(nil),                // 34: goshare.ReqPut
	(*RspPut)(nil),                // 35: goshare.RspPut
	(*ReqReverseScan)(nil),        // 36: goshare.ReqReverseScan
	(*RspReverseScan)(nil),        // 37: goshare.RspReverseScan
	(*ReqScan)(nil),               // 38: goshare.ReqScan
	(*RspScan)(nil),               // 39: goshare.RspScan
	(*Instrument)(nil),            // 40: goshare.Instrument
	(PeriodType)(0),               // 41: goshare.PeriodType
	(*KlineSeries)(nil),           // 42: goshare.KlineSeries
	(*MarketDataSnapshot)(nil),    // 43: goshare.MarketDataSnapshot
	(*Kline)(nil),                 // 44: goshare.Kline
	(PriceAdjustType)(0),          // 45: goshare.PriceAdjustType
	(*spider.SSEStockOption)(nil), // 46: goshare.spider.SSEStockOption
	(*spider.Bonus)(nil),          // 47: goshare.spider.Bonus
}
var file_goshare_rpc_proto_depIdxs = []int32{
	40, // 0: goshare.RspGetInstrumentList.list:type_name -> goshare.Instrument
	40, // 1: goshare.ReqSaveInstrument.instrument:type_name -> goshare.Instrument
	40, // 2: goshare.RspGetInstrument.instrument:type_name -> goshare.Instrument
	41, // 3: goshare.ReqCombineSubscribe.period_list:type_name -> goshare.PeriodType
	42, // 4: goshare.RspCombineSubscribe.history:type_name -> goshare.KlineSeries
	43, // 5: goshare.RspCombineSubscribe.tick:type_name -> goshare.MarketDataSnapshot
	44, // 6: goshare.RspCombineSubscribe.klines:type_name -> goshare.Kline
	43, // 7: goshare.RspGetTickSeries.list:type_name -> goshare.MarketDataSnapshot
	41, // 8: goshare.ReqSaveKlineSeries.period:type_name -> goshare.PeriodType
	45, // 9: goshare.ReqSaveKlineSeries.adjust:type_name -> goshare.PriceAdjustType
	44, // 10: goshare.ReqSaveKlineSeries.list:type_name -> goshare.Kline
	41, // 11: goshare.ReqGetKlineSeries.period:type_name -> goshare.PeriodType
	45, // 12: goshare.ReqGetKlineSeries.adjust:type_name -> goshare.PriceAdjustType
	41, // 13: goshare.RspGetKlineSeries.period:type_name -> goshare.PeriodType
	45, // 14: goshare.RspGetKlineSeries.adjust:type_name -> goshare.PriceAdjustType
	44, // 15: goshare.RspGetKlineSeries.list:type_name -> goshare.Kline
	46, // 16: goshare.RspSSEStockOptionList.list:type_name -> goshare.spider.SSEStockOption
	47, // 17: goshare.ReqSaveBonusHistory.list:type_name -> goshare.spider.Bonus
	47, // 18: goshare.RspGetBonusHistory.list:type_name -> goshare.spider.Bonus
	14, // 19: goshare.KlineCache.SaveKlineSeries:input_type -> goshare.ReqSaveKlineSeries
	16, // 20: goshare.KlineCache.GetKlineSeries:input_type -> goshare.ReqGetKlineSeries
	2,  // 21: goshare.KlineCache.SaveInstrument:input_type -> goshare.ReqSaveInstrument
	4,  // 22: goshare.KlineCache.GetInstrument:input_type -> goshare.ReqGetInstrument
	0,  // 23: goshare.KlineCache.GetInstrumentList:input_type -> goshare.ReqGetInstrumentList
	20, // 24: goshare.KlineCache.SaveBonusHistory:input_type -> goshare.ReqSaveBonusHistory
	22, // 25: goshare.KlineCache.GetBonusHistory:input_type -> goshare.ReqGetBonusHistory
	24, // 26: goshare.KlineCache.BatchDelete:input_type -> goshare.ReqBatchDelete
	26, // 27: goshare.KlineCache.BatchGet:input_type -> goshare.ReqBatchGet
	28, // 28: goshare.KlineCache.BatchPut:input_type -> goshare.ReqBatchPut
	30, // 29: goshare.KlineCache.Delete:input_type -> goshare.ReqDelete
	32, // 30: goshare.KlineCache.Get:input_type -> goshare.ReqGet
	34, // 31: goshare.KlineCache.Put:input_type -> goshare.ReqPut
	36, // 32: goshare.KlineCache.ReverseScan:input_type -> goshare.ReqReverseScan
	38, // 33: goshare.KlineCache.Scan:input_type -> goshare.ReqScan
	15, // 34: goshare.KlineCache.SaveKlineSeries:output_type -> goshare.RspSaveKlineSeries
	17, // 35: goshare.KlineCache.GetKlineSeries:output_type -> goshare.RspGetKlineSeries
	3,  // 36: goshare.KlineCache.SaveInstrument:output_type -> goshare.RspSaveInstrument
	5,  // 37: goshare.KlineCache.GetInstrument:output_type -> goshare.RspGetInstrument
	1,  // 38: goshare.KlineCache.GetInstrumentList:output_type -> goshare.RspGetInstrumentList
	21, // 39: goshare.KlineCache.SaveBonusHistory:output_type -> goshare.RspSaveBonusHistory
	23, // 40: goshare.KlineCache.GetBonusHistory:output_type -> goshare.RspGetBonusHistory
	25, // 41: goshare.KlineCache.BatchDelete:output_type -> goshare.RspBatchDelete
	27, // 42: goshare.KlineCache.BatchGet:output_type -> goshare.RspBatchGet
	29, // 43: goshare.KlineCache.BatchPut:output_type -> goshare.RspBatchPut
	31, // 44: goshare.KlineCache.Delete:output_type -> goshare.RspDelete
	33, // 45: goshare.KlineCache.Get:output_type -> goshare.RspGet
	35, // 46: goshare.KlineCache.Put:output_type -> goshare.RspPut
	37, // 47: goshare.KlineCache.ReverseScan:output_type -> goshare.RspReverseScan
	39, // 48: goshare.KlineCache.Scan:output_type -> goshare.RspScan
	34, // [34:49] is the sub-list for method output_type
	19, // [19:34] is the sub-list for method input_type
	19, // [19:19] is the sub-list for extension type_name
	19, // [19:19] is the sub-list for extension extendee
	0,  // [0:19] is the sub-list for field type_name
}

func init() { file_goshare_rpc_proto_init() }
func file_goshare_rpc_proto_init() {
	if File_goshare_rpc_proto != nil {
		return
	}
	file_goshare_common_proto_init()
	file_goshare_market_data_proto_init()
	file_goshare_instrument_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_goshare_rpc_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqGetInstrumentList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goshare_rpc_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RspGetInstrumentList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goshare_rpc_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqSaveInstrument); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goshare_rpc_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RspSaveInstrument); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goshare_rpc_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqGetInstrument); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goshare_rpc_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RspGetInstrument); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goshare_rpc_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqSubscribe); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goshare_rpc_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RspSubscribe); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goshare_rpc_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqUnSubscribe); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goshare_rpc_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RspUnSubscribe); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goshare_rpc_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqCombineSubscribe); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goshare_rpc_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RspCombineSubscribe); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goshare_rpc_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqGetTickSeries); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goshare_rpc_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RspGetTickSeries); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goshare_rpc_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqSaveKlineSeries); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goshare_rpc_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RspSaveKlineSeries); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goshare_rpc_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqGetKlineSeries); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goshare_rpc_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RspGetKlineSeries); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goshare_rpc_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqSSEStockOptionList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goshare_rpc_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RspSSEStockOptionList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goshare_rpc_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqSaveBonusHistory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goshare_rpc_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RspSaveBonusHistory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goshare_rpc_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqGetBonusHistory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goshare_rpc_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RspGetBonusHistory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goshare_rpc_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqBatchDelete); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goshare_rpc_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RspBatchDelete); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goshare_rpc_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqBatchGet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goshare_rpc_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RspBatchGet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goshare_rpc_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqBatchPut); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goshare_rpc_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RspBatchPut); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goshare_rpc_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqDelete); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goshare_rpc_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RspDelete); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goshare_rpc_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqGet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goshare_rpc_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RspGet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goshare_rpc_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqPut); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goshare_rpc_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RspPut); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goshare_rpc_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqReverseScan); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goshare_rpc_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RspReverseScan); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goshare_rpc_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqScan); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goshare_rpc_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RspScan); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_goshare_rpc_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   40,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_goshare_rpc_proto_goTypes,
		DependencyIndexes: file_goshare_rpc_proto_depIdxs,
		MessageInfos:      file_goshare_rpc_proto_msgTypes,
	}.Build()
	File_goshare_rpc_proto = out.File
	file_goshare_rpc_proto_rawDesc = nil
	file_goshare_rpc_proto_goTypes = nil
	file_goshare_rpc_proto_depIdxs = nil
}
