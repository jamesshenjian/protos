// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.29.1
// 	protoc        v4.22.2
// source: goshare/branch.proto

package goshare

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type BranchStatus int32

const (
	BranchStatus_BS_NORMAL BranchStatus = 0
	BranchStatus_BS_FROZEN BranchStatus = 1
)

// Enum value maps for BranchStatus.
var (
	BranchStatus_name = map[int32]string{
		0: "BS_NORMAL",
		1: "BS_FROZEN",
	}
	BranchStatus_value = map[string]int32{
		"BS_NORMAL": 0,
		"BS_FROZEN": 1,
	}
)

func (x BranchStatus) Enum() *BranchStatus {
	p := new(BranchStatus)
	*p = x
	return p
}

func (x BranchStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BranchStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_goshare_branch_proto_enumTypes[0].Descriptor()
}

func (BranchStatus) Type() protoreflect.EnumType {
	return &file_goshare_branch_proto_enumTypes[0]
}

func (x BranchStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BranchStatus.Descriptor instead.
func (BranchStatus) EnumDescriptor() ([]byte, []int) {
	return file_goshare_branch_proto_rawDescGZIP(), []int{0}
}

// 单纯树形结构体
type BranchTreeNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string            `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Children []*BranchTreeNode `protobuf:"bytes,2,rep,name=children,proto3" json:"children,omitempty"`
}

func (x *BranchTreeNode) Reset() {
	*x = BranchTreeNode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goshare_branch_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BranchTreeNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BranchTreeNode) ProtoMessage() {}

func (x *BranchTreeNode) ProtoReflect() protoreflect.Message {
	mi := &file_goshare_branch_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BranchTreeNode.ProtoReflect.Descriptor instead.
func (*BranchTreeNode) Descriptor() ([]byte, []int) {
	return file_goshare_branch_proto_rawDescGZIP(), []int{0}
}

func (x *BranchTreeNode) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *BranchTreeNode) GetChildren() []*BranchTreeNode {
	if x != nil {
		return x.Children
	}
	return nil
}

// 部门
type Branch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 编号
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// 名称
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// 备注
	Comment string `protobuf:"bytes,3,opt,name=comment,proto3" json:"comment,omitempty"`
	// 邀请码
	InviteCode []string `protobuf:"bytes,4,rep,name=invite_code,json=inviteCode,proto3" json:"invite_code,omitempty"`
	// 上级
	Parent string `protobuf:"bytes,5,opt,name=parent,proto3" json:"parent,omitempty"`
	// 创建时间
	CreateTime int64 `protobuf:"varint,6,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	// 部门状态
	Status BranchStatus `protobuf:"varint,7,opt,name=status,proto3,enum=goshare.BranchStatus" json:"status,omitempty"`
}

func (x *Branch) Reset() {
	*x = Branch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goshare_branch_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Branch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Branch) ProtoMessage() {}

func (x *Branch) ProtoReflect() protoreflect.Message {
	mi := &file_goshare_branch_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Branch.ProtoReflect.Descriptor instead.
func (*Branch) Descriptor() ([]byte, []int) {
	return file_goshare_branch_proto_rawDescGZIP(), []int{1}
}

func (x *Branch) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Branch) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Branch) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *Branch) GetInviteCode() []string {
	if x != nil {
		return x.InviteCode
	}
	return nil
}

func (x *Branch) GetParent() string {
	if x != nil {
		return x.Parent
	}
	return ""
}

func (x *Branch) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *Branch) GetStatus() BranchStatus {
	if x != nil {
		return x.Status
	}
	return BranchStatus_BS_NORMAL
}

var File_goshare_branch_proto protoreflect.FileDescriptor

var file_goshare_branch_proto_rawDesc = []byte{
	0x0a, 0x14, 0x67, 0x6f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x2f, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x67, 0x6f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x22,
	0x55, 0x0a, 0x0e, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x54, 0x72, 0x65, 0x65, 0x4e, 0x6f, 0x64,
	0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x33, 0x0a, 0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x2e, 0x42, 0x72,
	0x61, 0x6e, 0x63, 0x68, 0x54, 0x72, 0x65, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x08, 0x63, 0x68,
	0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x22, 0xcf, 0x01, 0x0a, 0x06, 0x42, 0x72, 0x61, 0x6e, 0x63,
	0x68, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12,
	0x1f, 0x0a, 0x0b, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2d, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x67, 0x6f, 0x73, 0x68,
	0x61, 0x72, 0x65, 0x2e, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2a, 0x2c, 0x0a, 0x0c, 0x42, 0x72, 0x61, 0x6e,
	0x63, 0x68, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x53, 0x5f, 0x4e,
	0x4f, 0x52, 0x4d, 0x41, 0x4c, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x53, 0x5f, 0x46, 0x52,
	0x4f, 0x5a, 0x45, 0x4e, 0x10, 0x01, 0x42, 0x30, 0x5a, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6a, 0x61, 0x6d, 0x65, 0x73, 0x73, 0x68, 0x65, 0x6e, 0x6a, 0x69,
	0x61, 0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x73, 0x72, 0x63, 0x2f, 0x67, 0x6f,
	0x2f, 0x67, 0x6f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_goshare_branch_proto_rawDescOnce sync.Once
	file_goshare_branch_proto_rawDescData = file_goshare_branch_proto_rawDesc
)

func file_goshare_branch_proto_rawDescGZIP() []byte {
	file_goshare_branch_proto_rawDescOnce.Do(func() {
		file_goshare_branch_proto_rawDescData = protoimpl.X.CompressGZIP(file_goshare_branch_proto_rawDescData)
	})
	return file_goshare_branch_proto_rawDescData
}

var file_goshare_branch_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_goshare_branch_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_goshare_branch_proto_goTypes = []interface{}{
	(BranchStatus)(0),      // 0: goshare.BranchStatus
	(*BranchTreeNode)(nil), // 1: goshare.BranchTreeNode
	(*Branch)(nil),         // 2: goshare.Branch
}
var file_goshare_branch_proto_depIdxs = []int32{
	1, // 0: goshare.BranchTreeNode.children:type_name -> goshare.BranchTreeNode
	0, // 1: goshare.Branch.status:type_name -> goshare.BranchStatus
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_goshare_branch_proto_init() }
func file_goshare_branch_proto_init() {
	if File_goshare_branch_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_goshare_branch_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BranchTreeNode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goshare_branch_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Branch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_goshare_branch_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_goshare_branch_proto_goTypes,
		DependencyIndexes: file_goshare_branch_proto_depIdxs,
		EnumInfos:         file_goshare_branch_proto_enumTypes,
		MessageInfos:      file_goshare_branch_proto_msgTypes,
	}.Build()
	File_goshare_branch_proto = out.File
	file_goshare_branch_proto_rawDesc = nil
	file_goshare_branch_proto_goTypes = nil
	file_goshare_branch_proto_depIdxs = nil
}
