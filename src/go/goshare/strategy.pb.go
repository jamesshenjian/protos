// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.29.1
// 	protoc        v4.22.2
// source: goshare/strategy.proto

package goshare

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Signal 交易信号
type Signal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OpenTime               int64   `protobuf:"varint,1,opt,name=open_time,json=openTime,proto3" json:"open_time,omitempty"`
	OpenPrice              float64 `protobuf:"fixed64,2,opt,name=open_price,json=openPrice,proto3" json:"open_price,omitempty"`
	CloseTime              int64   `protobuf:"varint,3,opt,name=close_time,json=closeTime,proto3" json:"close_time,omitempty"`
	ClosePrice             float64 `protobuf:"fixed64,4,opt,name=close_price,json=closePrice,proto3" json:"close_price,omitempty"`
	Volume                 int32   `protobuf:"varint,5,opt,name=volume,proto3" json:"volume,omitempty"`
	Direction              int32   `protobuf:"varint,6,opt,name=direction,proto3" json:"direction,omitempty"`
	Profit                 float64 `protobuf:"fixed64,7,opt,name=profit,proto3" json:"profit,omitempty"`
	AccumulativeProfit     float64 `protobuf:"fixed64,8,opt,name=accumulative_profit,json=accumulativeProfit,proto3" json:"accumulative_profit,omitempty"`
	Commission             float64 `protobuf:"fixed64,9,opt,name=commission,proto3" json:"commission,omitempty"`
	AccumulativeCommission float64 `protobuf:"fixed64,10,opt,name=accumulative_commission,json=accumulativeCommission,proto3" json:"accumulative_commission,omitempty"`
}

func (x *Signal) Reset() {
	*x = Signal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goshare_strategy_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Signal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Signal) ProtoMessage() {}

func (x *Signal) ProtoReflect() protoreflect.Message {
	mi := &file_goshare_strategy_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Signal.ProtoReflect.Descriptor instead.
func (*Signal) Descriptor() ([]byte, []int) {
	return file_goshare_strategy_proto_rawDescGZIP(), []int{0}
}

func (x *Signal) GetOpenTime() int64 {
	if x != nil {
		return x.OpenTime
	}
	return 0
}

func (x *Signal) GetOpenPrice() float64 {
	if x != nil {
		return x.OpenPrice
	}
	return 0
}

func (x *Signal) GetCloseTime() int64 {
	if x != nil {
		return x.CloseTime
	}
	return 0
}

func (x *Signal) GetClosePrice() float64 {
	if x != nil {
		return x.ClosePrice
	}
	return 0
}

func (x *Signal) GetVolume() int32 {
	if x != nil {
		return x.Volume
	}
	return 0
}

func (x *Signal) GetDirection() int32 {
	if x != nil {
		return x.Direction
	}
	return 0
}

func (x *Signal) GetProfit() float64 {
	if x != nil {
		return x.Profit
	}
	return 0
}

func (x *Signal) GetAccumulativeProfit() float64 {
	if x != nil {
		return x.AccumulativeProfit
	}
	return 0
}

func (x *Signal) GetCommission() float64 {
	if x != nil {
		return x.Commission
	}
	return 0
}

func (x *Signal) GetAccumulativeCommission() float64 {
	if x != nil {
		return x.AccumulativeCommission
	}
	return 0
}

// strategy signal
type AnalyzeResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Profit      float64 `protobuf:"fixed64,1,opt,name=profit,proto3" json:"profit,omitempty"`                              // 盈亏
	MaxDrawdown float64 `protobuf:"fixed64,2,opt,name=max_drawdown,json=maxDrawdown,proto3" json:"max_drawdown,omitempty"` // 最大回撤
	TakeTimes   int32   `protobuf:"varint,3,opt,name=take_times,json=takeTimes,proto3" json:"take_times,omitempty"`        // 盈利次数
	LossTimes   int32   `protobuf:"varint,4,opt,name=loss_times,json=lossTimes,proto3" json:"loss_times,omitempty"`        // 亏损次数
	TradeTimes  int32   `protobuf:"varint,5,opt,name=trade_times,json=tradeTimes,proto3" json:"trade_times,omitempty"`     // 交易次数
}

func (x *AnalyzeResult) Reset() {
	*x = AnalyzeResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goshare_strategy_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AnalyzeResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnalyzeResult) ProtoMessage() {}

func (x *AnalyzeResult) ProtoReflect() protoreflect.Message {
	mi := &file_goshare_strategy_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnalyzeResult.ProtoReflect.Descriptor instead.
func (*AnalyzeResult) Descriptor() ([]byte, []int) {
	return file_goshare_strategy_proto_rawDescGZIP(), []int{1}
}

func (x *AnalyzeResult) GetProfit() float64 {
	if x != nil {
		return x.Profit
	}
	return 0
}

func (x *AnalyzeResult) GetMaxDrawdown() float64 {
	if x != nil {
		return x.MaxDrawdown
	}
	return 0
}

func (x *AnalyzeResult) GetTakeTimes() int32 {
	if x != nil {
		return x.TakeTimes
	}
	return 0
}

func (x *AnalyzeResult) GetLossTimes() int32 {
	if x != nil {
		return x.LossTimes
	}
	return 0
}

func (x *AnalyzeResult) GetTradeTimes() int32 {
	if x != nil {
		return x.TradeTimes
	}
	return 0
}

// SignalList list
type SignalList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Exchange  string         `protobuf:"bytes,1,opt,name=exchange,proto3" json:"exchange,omitempty"`
	Symbol    string         `protobuf:"bytes,2,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Multiple  float64        `protobuf:"fixed64,3,opt,name=multiple,proto3" json:"multiple,omitempty"`
	PriceTick float64        `protobuf:"fixed64,4,opt,name=price_tick,json=priceTick,proto3" json:"price_tick,omitempty"`
	List      []*Signal      `protobuf:"bytes,5,rep,name=list,proto3" json:"list,omitempty"`
	Result    *AnalyzeResult `protobuf:"bytes,6,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *SignalList) Reset() {
	*x = SignalList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goshare_strategy_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignalList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignalList) ProtoMessage() {}

func (x *SignalList) ProtoReflect() protoreflect.Message {
	mi := &file_goshare_strategy_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignalList.ProtoReflect.Descriptor instead.
func (*SignalList) Descriptor() ([]byte, []int) {
	return file_goshare_strategy_proto_rawDescGZIP(), []int{2}
}

func (x *SignalList) GetExchange() string {
	if x != nil {
		return x.Exchange
	}
	return ""
}

func (x *SignalList) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *SignalList) GetMultiple() float64 {
	if x != nil {
		return x.Multiple
	}
	return 0
}

func (x *SignalList) GetPriceTick() float64 {
	if x != nil {
		return x.PriceTick
	}
	return 0
}

func (x *SignalList) GetList() []*Signal {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *SignalList) GetResult() *AnalyzeResult {
	if x != nil {
		return x.Result
	}
	return nil
}

var File_goshare_strategy_proto protoreflect.FileDescriptor

var file_goshare_strategy_proto_rawDesc = []byte{
	0x0a, 0x16, 0x67, 0x6f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x2f, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65,
	0x67, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x67, 0x6f, 0x73, 0x68, 0x61, 0x72,
	0x65, 0x22, 0xdc, 0x02, 0x0a, 0x06, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x12, 0x1b, 0x0a, 0x09,
	0x6f, 0x70, 0x65, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x6f, 0x70, 0x65, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6f, 0x70, 0x65,
	0x6e, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x6f,
	0x70, 0x65, 0x6e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6c, 0x6f, 0x73,
	0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x6c,
	0x6f, 0x73, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6c, 0x6f, 0x73, 0x65,
	0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x63, 0x6c,
	0x6f, 0x73, 0x65, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x6f, 0x6c, 0x75,
	0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16,
	0x0a, 0x06, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06,
	0x70, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x12, 0x2f, 0x0a, 0x13, 0x61, 0x63, 0x63, 0x75, 0x6d, 0x75,
	0x6c, 0x61, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x12, 0x61, 0x63, 0x63, 0x75, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x76,
	0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x63, 0x6f, 0x6d,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x37, 0x0a, 0x17, 0x61, 0x63, 0x63, 0x75, 0x6d,
	0x75, 0x6c, 0x61, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x01, 0x52, 0x16, 0x61, 0x63, 0x63, 0x75, 0x6d, 0x75,
	0x6c, 0x61, 0x74, 0x69, 0x76, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x22, 0xa9, 0x01, 0x0a, 0x0d, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x7a, 0x65, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x06, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x61,
	0x78, 0x5f, 0x64, 0x72, 0x61, 0x77, 0x64, 0x6f, 0x77, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x0b, 0x6d, 0x61, 0x78, 0x44, 0x72, 0x61, 0x77, 0x64, 0x6f, 0x77, 0x6e, 0x12, 0x1d, 0x0a,
	0x0a, 0x74, 0x61, 0x6b, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x09, 0x74, 0x61, 0x6b, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x12, 0x1d, 0x0a, 0x0a,
	0x6c, 0x6f, 0x73, 0x73, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x09, 0x6c, 0x6f, 0x73, 0x73, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x74,
	0x72, 0x61, 0x64, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0a, 0x74, 0x72, 0x61, 0x64, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x22, 0xd0, 0x01, 0x0a,
	0x0a, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x65,
	0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65,
	0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f,
	0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12,
	0x1a, 0x0a, 0x08, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x08, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x5f, 0x74, 0x69, 0x63, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x09, 0x70, 0x72, 0x69, 0x63, 0x65, 0x54, 0x69, 0x63, 0x6b, 0x12, 0x23, 0x0a, 0x04, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x67, 0x6f, 0x73, 0x68, 0x61,
	0x72, 0x65, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12,
	0x2e, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x67, 0x6f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x2e, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x7a,
	0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x42,
	0x30, 0x5a, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6a, 0x61,
	0x6d, 0x65, 0x73, 0x73, 0x68, 0x65, 0x6e, 0x6a, 0x69, 0x61, 0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x73, 0x2f, 0x73, 0x72, 0x63, 0x2f, 0x67, 0x6f, 0x2f, 0x67, 0x6f, 0x73, 0x68, 0x61, 0x72,
	0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_goshare_strategy_proto_rawDescOnce sync.Once
	file_goshare_strategy_proto_rawDescData = file_goshare_strategy_proto_rawDesc
)

func file_goshare_strategy_proto_rawDescGZIP() []byte {
	file_goshare_strategy_proto_rawDescOnce.Do(func() {
		file_goshare_strategy_proto_rawDescData = protoimpl.X.CompressGZIP(file_goshare_strategy_proto_rawDescData)
	})
	return file_goshare_strategy_proto_rawDescData
}

var file_goshare_strategy_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_goshare_strategy_proto_goTypes = []interface{}{
	(*Signal)(nil),        // 0: goshare.Signal
	(*AnalyzeResult)(nil), // 1: goshare.AnalyzeResult
	(*SignalList)(nil),    // 2: goshare.SignalList
}
var file_goshare_strategy_proto_depIdxs = []int32{
	0, // 0: goshare.SignalList.list:type_name -> goshare.Signal
	1, // 1: goshare.SignalList.result:type_name -> goshare.AnalyzeResult
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_goshare_strategy_proto_init() }
func file_goshare_strategy_proto_init() {
	if File_goshare_strategy_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_goshare_strategy_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Signal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goshare_strategy_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AnalyzeResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goshare_strategy_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignalList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_goshare_strategy_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_goshare_strategy_proto_goTypes,
		DependencyIndexes: file_goshare_strategy_proto_depIdxs,
		MessageInfos:      file_goshare_strategy_proto_msgTypes,
	}.Build()
	File_goshare_strategy_proto = out.File
	file_goshare_strategy_proto_rawDesc = nil
	file_goshare_strategy_proto_goTypes = nil
	file_goshare_strategy_proto_depIdxs = nil
}
