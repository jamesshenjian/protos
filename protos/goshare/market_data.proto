syntax = "proto3";
package goshare;

import "goshare/common.proto";

option go_package = "github.com/jamesshenjian/protos/src/go/goshare";

message OrderBook {
  double ask        = 1; /// 卖价
  int32  ask_volume = 2; /// 卖量
  double bid        = 3; /// 买价
  int32  bid_volume = 4; /// 买量
}

// 深度行情
message MarketDataSnapshot {
  string   exchange         = 1;  // 交易所
  string   symbol           = 2;  // 合约
  int64    time             = 3;  // 时间time_t
  int32    milliseconds     = 4;  // 毫秒
  double   open             = 5;  // 开盘
  double   high             = 6;  // 最高
  double   low              = 7;  // 最低
  double   close            = 8;  // 收盘
  int32    volume           = 9;  // 成交量
  double   amount           = 10; // 成交金额
  int32    position         = 11; // 持仓
  double   price            = 12; // 最新价格
  double   pre_close        = 13; // 昨收
  double   pre_settlement   = 14; // 昨结
  int32    pre_position     = 15; // 昨持仓
  double   settlement_price = 16; // 结算价
  double   upper_limit      = 17; // 涨停
  double   lower_limit      = 18; // 跌停
  double   pre_delta        = 19; // 昨虚实
  double   delta            = 20; // 今虚实
  double   average_price    = 21; // 均价
  int32    trading_day      = 22; // 交易日
  string   name             = 23; // 合约名称
  double   exercise_price   = 24; // 执行价
  int32    volume_delta     = 25; // 成交增量
  int32    action_day       = 27; // action day
  int32    multiple         = 28; // multiple
  double   price_tick       = 39; // price tick
  repeated OrderBook depths = 30; // 深度
}

// MdsList 行情列表
message MdsList { repeated MarketDataSnapshot list = 1; }

//期权T型
message OptionTMarket {
  MarketDataSnapshot callTk = 1; // call报价
  MarketDataSnapshot putTk  = 2; // put报价
}

// 简易期权T型报价
message SimpleTickForTQuote {
  string exchange             = 1;
  string symbol               = 2;
  double price                = 3;
  double up_down_ratio        = 4;
  double pre_settlement_price = 5;
  string name                 = 6;
}

// T型报价的一行
message OptionTQuoteItem {
  double              exercise_price      = 1;
  SimpleTickForTQuote call                = 2;
  SimpleTickForTQuote put                 = 3;
  string              exercise_price_flag = 4;
}

// OptionTQuoteItemList 列表
message OptionTQuoteItemList {
  int32    exchange              = 1;
  string   strike_symbol         = 2;
  string   month                 = 3;
  repeated OptionTQuoteItem list = 4;
}

// K线
message Kline {
  int64  time             = 1;  // 时间
  double open             = 2;  // 开盘
  double high             = 3;  // 最高
  double low              = 4;  // 最低
  double close            = 5;  // 收盘
  int32  volume           = 6;  // 成交量
  double amount           = 7;  // 成交额
  int32  position         = 8;  // 持仓量
  int32  trading_day      = 9;  // 交易日
}

// KlineSeries K线序列
message KlineSeries {
  string     exchange          = 1;
  string     symbol            = 2;
  PeriodType period            = 3;
  int32      period_in_seconds = 4;
  repeated Kline list          = 5;
}

// 订阅行情
message ReqSubscribeMarketData {
  string   exchange              = 1;
  string   symbol                = 2;
  repeated PeriodType periodList = 3;
}

// 返回订阅行情
message RspSubscribeMarketData {}

// 推送订阅行情更新事件
message RtnMarketDataUpdate {
  MarketDataSnapshot tick   = 1; // 最新盘口
  repeated Kline kline_list = 2; // 最新一根K线
}

// tick序列
message TickSeries {
  string   exchange                = 1;
  string   symbol                  = 2;
  int32    trading_day             = 3;
  repeated MarketDataSnapshot list = 4;
}

message SimpleTick {
  int64  time   = 1;
  double price  = 2;
  int32  volume = 3;
}

message SimpleTickSeries {
  string   exchange        = 1;
  string   symbol          = 2;
  int32    trading_day     = 3;
  repeated SimpleTick list = 4;
}

// 期货市场统计数据
message CtpFutureOverview {
  message RankItem {
    string exchange = 1;
    string symbol   = 2;
    double yield    = 3;
  }
  repeated RankItem yield_rank      = 1;
  repeated RankItem volatility_rank = 2;
}